/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// GetBrandingReq struct for GetBrandingReq
type GetBrandingReq struct {
	NameOrId *string `json:"nameOrId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetBrandingReq GetBrandingReq

// NewGetBrandingReq instantiates a new GetBrandingReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBrandingReq() *GetBrandingReq {
	this := GetBrandingReq{}
	return &this
}

// NewGetBrandingReqWithDefaults instantiates a new GetBrandingReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBrandingReqWithDefaults() *GetBrandingReq {
	this := GetBrandingReq{}
	return &this
}

// GetNameOrId returns the NameOrId field value if set, zero value otherwise.
func (o *GetBrandingReq) GetNameOrId() string {
	if o == nil || isNil(o.NameOrId) {
		var ret string
		return ret
	}
	return *o.NameOrId
}

// GetNameOrIdOk returns a tuple with the NameOrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrandingReq) GetNameOrIdOk() (*string, bool) {
	if o == nil || isNil(o.NameOrId) {
    return nil, false
	}
	return o.NameOrId, true
}

// HasNameOrId returns a boolean if a field has been set.
func (o *GetBrandingReq) HasNameOrId() bool {
	if o != nil && !isNil(o.NameOrId) {
		return true
	}

	return false
}

// SetNameOrId gets a reference to the given string and assigns it to the NameOrId field.
func (o *GetBrandingReq) SetNameOrId(v string) {
	o.NameOrId = &v
}

func (o GetBrandingReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NameOrId) {
		toSerialize["nameOrId"] = o.NameOrId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetBrandingReq) UnmarshalJSON(bytes []byte) (err error) {
	varGetBrandingReq := _GetBrandingReq{}

	if err = json.Unmarshal(bytes, &varGetBrandingReq); err == nil {
		*o = GetBrandingReq(varGetBrandingReq)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "nameOrId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetBrandingReq struct {
	value *GetBrandingReq
	isSet bool
}

func (v NullableGetBrandingReq) Get() *GetBrandingReq {
	return v.value
}

func (v *NullableGetBrandingReq) Set(val *GetBrandingReq) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBrandingReq) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBrandingReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBrandingReq(val *GetBrandingReq) *NullableGetBrandingReq {
	return &NullableGetBrandingReq{value: val, isSet: true}
}

func (v NullableGetBrandingReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBrandingReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


