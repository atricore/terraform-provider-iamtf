/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// OIDCSignOnRequest struct for OIDCSignOnRequest
type OIDCSignOnRequest struct {
	ClientId *string `json:"clientId,omitempty"`
	Password *string `json:"password,omitempty"`
	Secret *string `json:"secret,omitempty"`
	Server *ServerContext `json:"server,omitempty"`
	Username *string `json:"username,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OIDCSignOnRequest OIDCSignOnRequest

// NewOIDCSignOnRequest instantiates a new OIDCSignOnRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCSignOnRequest() *OIDCSignOnRequest {
	this := OIDCSignOnRequest{}
	return &this
}

// NewOIDCSignOnRequestWithDefaults instantiates a new OIDCSignOnRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCSignOnRequestWithDefaults() *OIDCSignOnRequest {
	this := OIDCSignOnRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OIDCSignOnRequest) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnRequest) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
    return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OIDCSignOnRequest) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *OIDCSignOnRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *OIDCSignOnRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *OIDCSignOnRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *OIDCSignOnRequest) SetPassword(v string) {
	o.Password = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *OIDCSignOnRequest) GetSecret() string {
	if o == nil || isNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnRequest) GetSecretOk() (*string, bool) {
	if o == nil || isNil(o.Secret) {
    return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *OIDCSignOnRequest) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *OIDCSignOnRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *OIDCSignOnRequest) GetServer() ServerContext {
	if o == nil || isNil(o.Server) {
		var ret ServerContext
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnRequest) GetServerOk() (*ServerContext, bool) {
	if o == nil || isNil(o.Server) {
    return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *OIDCSignOnRequest) HasServer() bool {
	if o != nil && !isNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ServerContext and assigns it to the Server field.
func (o *OIDCSignOnRequest) SetServer(v ServerContext) {
	o.Server = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *OIDCSignOnRequest) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnRequest) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *OIDCSignOnRequest) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *OIDCSignOnRequest) SetUsername(v string) {
	o.Username = &v
}

func (o OIDCSignOnRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !isNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OIDCSignOnRequest) UnmarshalJSON(bytes []byte) (err error) {
	varOIDCSignOnRequest := _OIDCSignOnRequest{}

	if err = json.Unmarshal(bytes, &varOIDCSignOnRequest); err == nil {
		*o = OIDCSignOnRequest(varOIDCSignOnRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "password")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "server")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOIDCSignOnRequest struct {
	value *OIDCSignOnRequest
	isSet bool
}

func (v NullableOIDCSignOnRequest) Get() *OIDCSignOnRequest {
	return v.value
}

func (v *NullableOIDCSignOnRequest) Set(val *OIDCSignOnRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCSignOnRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCSignOnRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCSignOnRequest(val *OIDCSignOnRequest) *NullableOIDCSignOnRequest {
	return &NullableOIDCSignOnRequest{value: val, isSet: true}
}

func (v NullableOIDCSignOnRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCSignOnRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


