/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.1-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// StoreIdpFacebookReq struct for StoreIdpFacebookReq
type StoreIdpFacebookReq struct {
	IdOrName *string `json:"idOrName,omitempty"`
	Idp *FacebookOpenIDConnectIdentityProviderDTO `json:"idp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StoreIdpFacebookReq StoreIdpFacebookReq

// NewStoreIdpFacebookReq instantiates a new StoreIdpFacebookReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreIdpFacebookReq() *StoreIdpFacebookReq {
	this := StoreIdpFacebookReq{}
	return &this
}

// NewStoreIdpFacebookReqWithDefaults instantiates a new StoreIdpFacebookReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreIdpFacebookReqWithDefaults() *StoreIdpFacebookReq {
	this := StoreIdpFacebookReq{}
	return &this
}

// GetIdOrName returns the IdOrName field value if set, zero value otherwise.
func (o *StoreIdpFacebookReq) GetIdOrName() string {
	if o == nil || isNil(o.IdOrName) {
		var ret string
		return ret
	}
	return *o.IdOrName
}

// GetIdOrNameOk returns a tuple with the IdOrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreIdpFacebookReq) GetIdOrNameOk() (*string, bool) {
	if o == nil || isNil(o.IdOrName) {
    return nil, false
	}
	return o.IdOrName, true
}

// HasIdOrName returns a boolean if a field has been set.
func (o *StoreIdpFacebookReq) HasIdOrName() bool {
	if o != nil && !isNil(o.IdOrName) {
		return true
	}

	return false
}

// SetIdOrName gets a reference to the given string and assigns it to the IdOrName field.
func (o *StoreIdpFacebookReq) SetIdOrName(v string) {
	o.IdOrName = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *StoreIdpFacebookReq) GetIdp() FacebookOpenIDConnectIdentityProviderDTO {
	if o == nil || isNil(o.Idp) {
		var ret FacebookOpenIDConnectIdentityProviderDTO
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreIdpFacebookReq) GetIdpOk() (*FacebookOpenIDConnectIdentityProviderDTO, bool) {
	if o == nil || isNil(o.Idp) {
    return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *StoreIdpFacebookReq) HasIdp() bool {
	if o != nil && !isNil(o.Idp) {
		return true
	}

	return false
}

// SetIdp gets a reference to the given FacebookOpenIDConnectIdentityProviderDTO and assigns it to the Idp field.
func (o *StoreIdpFacebookReq) SetIdp(v FacebookOpenIDConnectIdentityProviderDTO) {
	o.Idp = &v
}

func (o StoreIdpFacebookReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IdOrName) {
		toSerialize["idOrName"] = o.IdOrName
	}
	if !isNil(o.Idp) {
		toSerialize["idp"] = o.Idp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StoreIdpFacebookReq) UnmarshalJSON(bytes []byte) (err error) {
	varStoreIdpFacebookReq := _StoreIdpFacebookReq{}

	if err = json.Unmarshal(bytes, &varStoreIdpFacebookReq); err == nil {
		*o = StoreIdpFacebookReq(varStoreIdpFacebookReq)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "idOrName")
		delete(additionalProperties, "idp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStoreIdpFacebookReq struct {
	value *StoreIdpFacebookReq
	isSet bool
}

func (v NullableStoreIdpFacebookReq) Get() *StoreIdpFacebookReq {
	return v.value
}

func (v *NullableStoreIdpFacebookReq) Set(val *StoreIdpFacebookReq) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreIdpFacebookReq) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreIdpFacebookReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreIdpFacebookReq(val *StoreIdpFacebookReq) *NullableStoreIdpFacebookReq {
	return &NullableStoreIdpFacebookReq{value: val, isSet: true}
}

func (v NullableStoreIdpFacebookReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreIdpFacebookReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


