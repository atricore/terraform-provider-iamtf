/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// ClientCertAuthnServiceDTO struct for ClientCertAuthnServiceDTO
type ClientCertAuthnServiceDTO struct {
	ClrEnabled *bool `json:"clrEnabled,omitempty"`
	CrlRefreshSeconds *int32 `json:"crlRefreshSeconds,omitempty"`
	CrlUrl *string `json:"crlUrl,omitempty"`
	CustomClass *CustomClassDTO `json:"customClass,omitempty"`
	DelegatedAuthentications []DelegatedAuthenticationDTO `json:"delegatedAuthentications,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OcspEnabled *bool `json:"ocspEnabled,omitempty"`
	OcspServer *string `json:"ocspServer,omitempty"`
	Ocspserver *string `json:"ocspserver,omitempty"`
	Uid *string `json:"uid,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientCertAuthnServiceDTO ClientCertAuthnServiceDTO

// NewClientCertAuthnServiceDTO instantiates a new ClientCertAuthnServiceDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCertAuthnServiceDTO() *ClientCertAuthnServiceDTO {
	this := ClientCertAuthnServiceDTO{}
	return &this
}

// NewClientCertAuthnServiceDTOWithDefaults instantiates a new ClientCertAuthnServiceDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCertAuthnServiceDTOWithDefaults() *ClientCertAuthnServiceDTO {
	this := ClientCertAuthnServiceDTO{}
	return &this
}

// GetClrEnabled returns the ClrEnabled field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetClrEnabled() bool {
	if o == nil || o.ClrEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ClrEnabled
}

// GetClrEnabledOk returns a tuple with the ClrEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetClrEnabledOk() (*bool, bool) {
	if o == nil || o.ClrEnabled == nil {
		return nil, false
	}
	return o.ClrEnabled, true
}

// HasClrEnabled returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasClrEnabled() bool {
	if o != nil && o.ClrEnabled != nil {
		return true
	}

	return false
}

// SetClrEnabled gets a reference to the given bool and assigns it to the ClrEnabled field.
func (o *ClientCertAuthnServiceDTO) SetClrEnabled(v bool) {
	o.ClrEnabled = &v
}

// GetCrlRefreshSeconds returns the CrlRefreshSeconds field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetCrlRefreshSeconds() int32 {
	if o == nil || o.CrlRefreshSeconds == nil {
		var ret int32
		return ret
	}
	return *o.CrlRefreshSeconds
}

// GetCrlRefreshSecondsOk returns a tuple with the CrlRefreshSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetCrlRefreshSecondsOk() (*int32, bool) {
	if o == nil || o.CrlRefreshSeconds == nil {
		return nil, false
	}
	return o.CrlRefreshSeconds, true
}

// HasCrlRefreshSeconds returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasCrlRefreshSeconds() bool {
	if o != nil && o.CrlRefreshSeconds != nil {
		return true
	}

	return false
}

// SetCrlRefreshSeconds gets a reference to the given int32 and assigns it to the CrlRefreshSeconds field.
func (o *ClientCertAuthnServiceDTO) SetCrlRefreshSeconds(v int32) {
	o.CrlRefreshSeconds = &v
}

// GetCrlUrl returns the CrlUrl field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetCrlUrl() string {
	if o == nil || o.CrlUrl == nil {
		var ret string
		return ret
	}
	return *o.CrlUrl
}

// GetCrlUrlOk returns a tuple with the CrlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetCrlUrlOk() (*string, bool) {
	if o == nil || o.CrlUrl == nil {
		return nil, false
	}
	return o.CrlUrl, true
}

// HasCrlUrl returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasCrlUrl() bool {
	if o != nil && o.CrlUrl != nil {
		return true
	}

	return false
}

// SetCrlUrl gets a reference to the given string and assigns it to the CrlUrl field.
func (o *ClientCertAuthnServiceDTO) SetCrlUrl(v string) {
	o.CrlUrl = &v
}

// GetCustomClass returns the CustomClass field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetCustomClass() CustomClassDTO {
	if o == nil || o.CustomClass == nil {
		var ret CustomClassDTO
		return ret
	}
	return *o.CustomClass
}

// GetCustomClassOk returns a tuple with the CustomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetCustomClassOk() (*CustomClassDTO, bool) {
	if o == nil || o.CustomClass == nil {
		return nil, false
	}
	return o.CustomClass, true
}

// HasCustomClass returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasCustomClass() bool {
	if o != nil && o.CustomClass != nil {
		return true
	}

	return false
}

// SetCustomClass gets a reference to the given CustomClassDTO and assigns it to the CustomClass field.
func (o *ClientCertAuthnServiceDTO) SetCustomClass(v CustomClassDTO) {
	o.CustomClass = &v
}

// GetDelegatedAuthentications returns the DelegatedAuthentications field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetDelegatedAuthentications() []DelegatedAuthenticationDTO {
	if o == nil || o.DelegatedAuthentications == nil {
		var ret []DelegatedAuthenticationDTO
		return ret
	}
	return o.DelegatedAuthentications
}

// GetDelegatedAuthenticationsOk returns a tuple with the DelegatedAuthentications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetDelegatedAuthenticationsOk() ([]DelegatedAuthenticationDTO, bool) {
	if o == nil || o.DelegatedAuthentications == nil {
		return nil, false
	}
	return o.DelegatedAuthentications, true
}

// HasDelegatedAuthentications returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasDelegatedAuthentications() bool {
	if o != nil && o.DelegatedAuthentications != nil {
		return true
	}

	return false
}

// SetDelegatedAuthentications gets a reference to the given []DelegatedAuthenticationDTO and assigns it to the DelegatedAuthentications field.
func (o *ClientCertAuthnServiceDTO) SetDelegatedAuthentications(v []DelegatedAuthenticationDTO) {
	o.DelegatedAuthentications = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClientCertAuthnServiceDTO) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ClientCertAuthnServiceDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *ClientCertAuthnServiceDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClientCertAuthnServiceDTO) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientCertAuthnServiceDTO) SetName(v string) {
	o.Name = &v
}

// GetOcspEnabled returns the OcspEnabled field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetOcspEnabled() bool {
	if o == nil || o.OcspEnabled == nil {
		var ret bool
		return ret
	}
	return *o.OcspEnabled
}

// GetOcspEnabledOk returns a tuple with the OcspEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetOcspEnabledOk() (*bool, bool) {
	if o == nil || o.OcspEnabled == nil {
		return nil, false
	}
	return o.OcspEnabled, true
}

// HasOcspEnabled returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasOcspEnabled() bool {
	if o != nil && o.OcspEnabled != nil {
		return true
	}

	return false
}

// SetOcspEnabled gets a reference to the given bool and assigns it to the OcspEnabled field.
func (o *ClientCertAuthnServiceDTO) SetOcspEnabled(v bool) {
	o.OcspEnabled = &v
}

// GetOcspServer returns the OcspServer field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetOcspServer() string {
	if o == nil || o.OcspServer == nil {
		var ret string
		return ret
	}
	return *o.OcspServer
}

// GetOcspServerOk returns a tuple with the OcspServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetOcspServerOk() (*string, bool) {
	if o == nil || o.OcspServer == nil {
		return nil, false
	}
	return o.OcspServer, true
}

// HasOcspServer returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasOcspServer() bool {
	if o != nil && o.OcspServer != nil {
		return true
	}

	return false
}

// SetOcspServer gets a reference to the given string and assigns it to the OcspServer field.
func (o *ClientCertAuthnServiceDTO) SetOcspServer(v string) {
	o.OcspServer = &v
}

// GetOcspserver returns the Ocspserver field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetOcspserver() string {
	if o == nil || o.Ocspserver == nil {
		var ret string
		return ret
	}
	return *o.Ocspserver
}

// GetOcspserverOk returns a tuple with the Ocspserver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetOcspserverOk() (*string, bool) {
	if o == nil || o.Ocspserver == nil {
		return nil, false
	}
	return o.Ocspserver, true
}

// HasOcspserver returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasOcspserver() bool {
	if o != nil && o.Ocspserver != nil {
		return true
	}

	return false
}

// SetOcspserver gets a reference to the given string and assigns it to the Ocspserver field.
func (o *ClientCertAuthnServiceDTO) SetOcspserver(v string) {
	o.Ocspserver = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ClientCertAuthnServiceDTO) SetUid(v string) {
	o.Uid = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetX() float64 {
	if o == nil || o.X == nil {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetXOk() (*float64, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *ClientCertAuthnServiceDTO) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *ClientCertAuthnServiceDTO) GetY() float64 {
	if o == nil || o.Y == nil {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertAuthnServiceDTO) GetYOk() (*float64, bool) {
	if o == nil || o.Y == nil {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *ClientCertAuthnServiceDTO) HasY() bool {
	if o != nil && o.Y != nil {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *ClientCertAuthnServiceDTO) SetY(v float64) {
	o.Y = &v
}

func (o ClientCertAuthnServiceDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClrEnabled != nil {
		toSerialize["clrEnabled"] = o.ClrEnabled
	}
	if o.CrlRefreshSeconds != nil {
		toSerialize["crlRefreshSeconds"] = o.CrlRefreshSeconds
	}
	if o.CrlUrl != nil {
		toSerialize["crlUrl"] = o.CrlUrl
	}
	if o.CustomClass != nil {
		toSerialize["customClass"] = o.CustomClass
	}
	if o.DelegatedAuthentications != nil {
		toSerialize["delegatedAuthentications"] = o.DelegatedAuthentications
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OcspEnabled != nil {
		toSerialize["ocspEnabled"] = o.OcspEnabled
	}
	if o.OcspServer != nil {
		toSerialize["ocspServer"] = o.OcspServer
	}
	if o.Ocspserver != nil {
		toSerialize["ocspserver"] = o.Ocspserver
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Y != nil {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ClientCertAuthnServiceDTO) UnmarshalJSON(bytes []byte) (err error) {
	varClientCertAuthnServiceDTO := _ClientCertAuthnServiceDTO{}

	if err = json.Unmarshal(bytes, &varClientCertAuthnServiceDTO); err == nil {
		*o = ClientCertAuthnServiceDTO(varClientCertAuthnServiceDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "clrEnabled")
		delete(additionalProperties, "crlRefreshSeconds")
		delete(additionalProperties, "crlUrl")
		delete(additionalProperties, "customClass")
		delete(additionalProperties, "delegatedAuthentications")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "ocspEnabled")
		delete(additionalProperties, "ocspServer")
		delete(additionalProperties, "ocspserver")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientCertAuthnServiceDTO struct {
	value *ClientCertAuthnServiceDTO
	isSet bool
}

func (v NullableClientCertAuthnServiceDTO) Get() *ClientCertAuthnServiceDTO {
	return v.value
}

func (v *NullableClientCertAuthnServiceDTO) Set(val *ClientCertAuthnServiceDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCertAuthnServiceDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCertAuthnServiceDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCertAuthnServiceDTO(val *ClientCertAuthnServiceDTO) *NullableClientCertAuthnServiceDTO {
	return &NullableClientCertAuthnServiceDTO{value: val, isSet: true}
}

func (v NullableClientCertAuthnServiceDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCertAuthnServiceDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


