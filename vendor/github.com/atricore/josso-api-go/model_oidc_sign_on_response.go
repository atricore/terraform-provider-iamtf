/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// OIDCSignOnResponse struct for OIDCSignOnResponse
type OIDCSignOnResponse struct {
	AccessToken *string `json:"accessToken,omitempty"`
	AuthenticatedUser *UserDTO `json:"authenticatedUser,omitempty"`
	IdToken *string `json:"idToken,omitempty"`
	RefreshToken *string `json:"refreshToken,omitempty"`
	Server *ServerContext `json:"server,omitempty"`
	ValidationErrors []string `json:"validationErrors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OIDCSignOnResponse OIDCSignOnResponse

// NewOIDCSignOnResponse instantiates a new OIDCSignOnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCSignOnResponse() *OIDCSignOnResponse {
	this := OIDCSignOnResponse{}
	return &this
}

// NewOIDCSignOnResponseWithDefaults instantiates a new OIDCSignOnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCSignOnResponseWithDefaults() *OIDCSignOnResponse {
	this := OIDCSignOnResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetAccessToken() string {
	if o == nil || isNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || isNil(o.AccessToken) {
    return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasAccessToken() bool {
	if o != nil && !isNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *OIDCSignOnResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetAuthenticatedUser returns the AuthenticatedUser field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetAuthenticatedUser() UserDTO {
	if o == nil || isNil(o.AuthenticatedUser) {
		var ret UserDTO
		return ret
	}
	return *o.AuthenticatedUser
}

// GetAuthenticatedUserOk returns a tuple with the AuthenticatedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetAuthenticatedUserOk() (*UserDTO, bool) {
	if o == nil || isNil(o.AuthenticatedUser) {
    return nil, false
	}
	return o.AuthenticatedUser, true
}

// HasAuthenticatedUser returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasAuthenticatedUser() bool {
	if o != nil && !isNil(o.AuthenticatedUser) {
		return true
	}

	return false
}

// SetAuthenticatedUser gets a reference to the given UserDTO and assigns it to the AuthenticatedUser field.
func (o *OIDCSignOnResponse) SetAuthenticatedUser(v UserDTO) {
	o.AuthenticatedUser = &v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetIdToken() string {
	if o == nil || isNil(o.IdToken) {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetIdTokenOk() (*string, bool) {
	if o == nil || isNil(o.IdToken) {
    return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasIdToken() bool {
	if o != nil && !isNil(o.IdToken) {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *OIDCSignOnResponse) SetIdToken(v string) {
	o.IdToken = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetRefreshToken() string {
	if o == nil || isNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil || isNil(o.RefreshToken) {
    return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasRefreshToken() bool {
	if o != nil && !isNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *OIDCSignOnResponse) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetServer() ServerContext {
	if o == nil || isNil(o.Server) {
		var ret ServerContext
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetServerOk() (*ServerContext, bool) {
	if o == nil || isNil(o.Server) {
    return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasServer() bool {
	if o != nil && !isNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ServerContext and assigns it to the Server field.
func (o *OIDCSignOnResponse) SetServer(v ServerContext) {
	o.Server = &v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *OIDCSignOnResponse) GetValidationErrors() []string {
	if o == nil || isNil(o.ValidationErrors) {
		var ret []string
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCSignOnResponse) GetValidationErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.ValidationErrors) {
    return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *OIDCSignOnResponse) HasValidationErrors() bool {
	if o != nil && !isNil(o.ValidationErrors) {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []string and assigns it to the ValidationErrors field.
func (o *OIDCSignOnResponse) SetValidationErrors(v []string) {
	o.ValidationErrors = v
}

func (o OIDCSignOnResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !isNil(o.AuthenticatedUser) {
		toSerialize["authenticatedUser"] = o.AuthenticatedUser
	}
	if !isNil(o.IdToken) {
		toSerialize["idToken"] = o.IdToken
	}
	if !isNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	if !isNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !isNil(o.ValidationErrors) {
		toSerialize["validationErrors"] = o.ValidationErrors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OIDCSignOnResponse) UnmarshalJSON(bytes []byte) (err error) {
	varOIDCSignOnResponse := _OIDCSignOnResponse{}

	if err = json.Unmarshal(bytes, &varOIDCSignOnResponse); err == nil {
		*o = OIDCSignOnResponse(varOIDCSignOnResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessToken")
		delete(additionalProperties, "authenticatedUser")
		delete(additionalProperties, "idToken")
		delete(additionalProperties, "refreshToken")
		delete(additionalProperties, "server")
		delete(additionalProperties, "validationErrors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOIDCSignOnResponse struct {
	value *OIDCSignOnResponse
	isSet bool
}

func (v NullableOIDCSignOnResponse) Get() *OIDCSignOnResponse {
	return v.value
}

func (v *NullableOIDCSignOnResponse) Set(val *OIDCSignOnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCSignOnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCSignOnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCSignOnResponse(val *OIDCSignOnResponse) *NullableOIDCSignOnResponse {
	return &NullableOIDCSignOnResponse{value: val, isSet: true}
}

func (v NullableOIDCSignOnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCSignOnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


