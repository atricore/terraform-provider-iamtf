/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// JOSSO1ResourceDTO struct for JOSSO1ResourceDTO
type JOSSO1ResourceDTO struct {
	Activation *ActivationDTO `json:"activation,omitempty"`
	DefaultResource *string `json:"defaultResource,omitempty"`
	Description *string `json:"description,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IgnoredWebResources []string `json:"ignoredWebResources,omitempty"`
	Name *string `json:"name,omitempty"`
	PartnerAppLocation *LocationDTO `json:"partnerAppLocation,omitempty"`
	ServiceConnection *ServiceConnectionDTO `json:"serviceConnection,omitempty"`
	SloLocation *LocationDTO `json:"sloLocation,omitempty"`
	SloLocationEnabled *bool `json:"sloLocationEnabled,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JOSSO1ResourceDTO JOSSO1ResourceDTO

// NewJOSSO1ResourceDTO instantiates a new JOSSO1ResourceDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJOSSO1ResourceDTO() *JOSSO1ResourceDTO {
	this := JOSSO1ResourceDTO{}
	return &this
}

// NewJOSSO1ResourceDTOWithDefaults instantiates a new JOSSO1ResourceDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJOSSO1ResourceDTOWithDefaults() *JOSSO1ResourceDTO {
	this := JOSSO1ResourceDTO{}
	return &this
}

// GetActivation returns the Activation field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetActivation() ActivationDTO {
	if o == nil || isNil(o.Activation) {
		var ret ActivationDTO
		return ret
	}
	return *o.Activation
}

// GetActivationOk returns a tuple with the Activation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetActivationOk() (*ActivationDTO, bool) {
	if o == nil || isNil(o.Activation) {
    return nil, false
	}
	return o.Activation, true
}

// HasActivation returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasActivation() bool {
	if o != nil && !isNil(o.Activation) {
		return true
	}

	return false
}

// SetActivation gets a reference to the given ActivationDTO and assigns it to the Activation field.
func (o *JOSSO1ResourceDTO) SetActivation(v ActivationDTO) {
	o.Activation = &v
}

// GetDefaultResource returns the DefaultResource field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetDefaultResource() string {
	if o == nil || isNil(o.DefaultResource) {
		var ret string
		return ret
	}
	return *o.DefaultResource
}

// GetDefaultResourceOk returns a tuple with the DefaultResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetDefaultResourceOk() (*string, bool) {
	if o == nil || isNil(o.DefaultResource) {
    return nil, false
	}
	return o.DefaultResource, true
}

// HasDefaultResource returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasDefaultResource() bool {
	if o != nil && !isNil(o.DefaultResource) {
		return true
	}

	return false
}

// SetDefaultResource gets a reference to the given string and assigns it to the DefaultResource field.
func (o *JOSSO1ResourceDTO) SetDefaultResource(v string) {
	o.DefaultResource = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *JOSSO1ResourceDTO) SetDescription(v string) {
	o.Description = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *JOSSO1ResourceDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *JOSSO1ResourceDTO) SetId(v int64) {
	o.Id = &v
}

// GetIgnoredWebResources returns the IgnoredWebResources field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetIgnoredWebResources() []string {
	if o == nil || isNil(o.IgnoredWebResources) {
		var ret []string
		return ret
	}
	return o.IgnoredWebResources
}

// GetIgnoredWebResourcesOk returns a tuple with the IgnoredWebResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetIgnoredWebResourcesOk() ([]string, bool) {
	if o == nil || isNil(o.IgnoredWebResources) {
    return nil, false
	}
	return o.IgnoredWebResources, true
}

// HasIgnoredWebResources returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasIgnoredWebResources() bool {
	if o != nil && !isNil(o.IgnoredWebResources) {
		return true
	}

	return false
}

// SetIgnoredWebResources gets a reference to the given []string and assigns it to the IgnoredWebResources field.
func (o *JOSSO1ResourceDTO) SetIgnoredWebResources(v []string) {
	o.IgnoredWebResources = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JOSSO1ResourceDTO) SetName(v string) {
	o.Name = &v
}

// GetPartnerAppLocation returns the PartnerAppLocation field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetPartnerAppLocation() LocationDTO {
	if o == nil || isNil(o.PartnerAppLocation) {
		var ret LocationDTO
		return ret
	}
	return *o.PartnerAppLocation
}

// GetPartnerAppLocationOk returns a tuple with the PartnerAppLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetPartnerAppLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.PartnerAppLocation) {
    return nil, false
	}
	return o.PartnerAppLocation, true
}

// HasPartnerAppLocation returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasPartnerAppLocation() bool {
	if o != nil && !isNil(o.PartnerAppLocation) {
		return true
	}

	return false
}

// SetPartnerAppLocation gets a reference to the given LocationDTO and assigns it to the PartnerAppLocation field.
func (o *JOSSO1ResourceDTO) SetPartnerAppLocation(v LocationDTO) {
	o.PartnerAppLocation = &v
}

// GetServiceConnection returns the ServiceConnection field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetServiceConnection() ServiceConnectionDTO {
	if o == nil || isNil(o.ServiceConnection) {
		var ret ServiceConnectionDTO
		return ret
	}
	return *o.ServiceConnection
}

// GetServiceConnectionOk returns a tuple with the ServiceConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetServiceConnectionOk() (*ServiceConnectionDTO, bool) {
	if o == nil || isNil(o.ServiceConnection) {
    return nil, false
	}
	return o.ServiceConnection, true
}

// HasServiceConnection returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasServiceConnection() bool {
	if o != nil && !isNil(o.ServiceConnection) {
		return true
	}

	return false
}

// SetServiceConnection gets a reference to the given ServiceConnectionDTO and assigns it to the ServiceConnection field.
func (o *JOSSO1ResourceDTO) SetServiceConnection(v ServiceConnectionDTO) {
	o.ServiceConnection = &v
}

// GetSloLocation returns the SloLocation field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetSloLocation() LocationDTO {
	if o == nil || isNil(o.SloLocation) {
		var ret LocationDTO
		return ret
	}
	return *o.SloLocation
}

// GetSloLocationOk returns a tuple with the SloLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetSloLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.SloLocation) {
    return nil, false
	}
	return o.SloLocation, true
}

// HasSloLocation returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasSloLocation() bool {
	if o != nil && !isNil(o.SloLocation) {
		return true
	}

	return false
}

// SetSloLocation gets a reference to the given LocationDTO and assigns it to the SloLocation field.
func (o *JOSSO1ResourceDTO) SetSloLocation(v LocationDTO) {
	o.SloLocation = &v
}

// GetSloLocationEnabled returns the SloLocationEnabled field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetSloLocationEnabled() bool {
	if o == nil || isNil(o.SloLocationEnabled) {
		var ret bool
		return ret
	}
	return *o.SloLocationEnabled
}

// GetSloLocationEnabledOk returns a tuple with the SloLocationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetSloLocationEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.SloLocationEnabled) {
    return nil, false
	}
	return o.SloLocationEnabled, true
}

// HasSloLocationEnabled returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasSloLocationEnabled() bool {
	if o != nil && !isNil(o.SloLocationEnabled) {
		return true
	}

	return false
}

// SetSloLocationEnabled gets a reference to the given bool and assigns it to the SloLocationEnabled field.
func (o *JOSSO1ResourceDTO) SetSloLocationEnabled(v bool) {
	o.SloLocationEnabled = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetX() float64 {
	if o == nil || isNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetXOk() (*float64, bool) {
	if o == nil || isNil(o.X) {
    return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasX() bool {
	if o != nil && !isNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *JOSSO1ResourceDTO) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *JOSSO1ResourceDTO) GetY() float64 {
	if o == nil || isNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JOSSO1ResourceDTO) GetYOk() (*float64, bool) {
	if o == nil || isNil(o.Y) {
    return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *JOSSO1ResourceDTO) HasY() bool {
	if o != nil && !isNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *JOSSO1ResourceDTO) SetY(v float64) {
	o.Y = &v
}

func (o JOSSO1ResourceDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Activation) {
		toSerialize["activation"] = o.Activation
	}
	if !isNil(o.DefaultResource) {
		toSerialize["defaultResource"] = o.DefaultResource
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IgnoredWebResources) {
		toSerialize["ignoredWebResources"] = o.IgnoredWebResources
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.PartnerAppLocation) {
		toSerialize["partnerAppLocation"] = o.PartnerAppLocation
	}
	if !isNil(o.ServiceConnection) {
		toSerialize["serviceConnection"] = o.ServiceConnection
	}
	if !isNil(o.SloLocation) {
		toSerialize["sloLocation"] = o.SloLocation
	}
	if !isNil(o.SloLocationEnabled) {
		toSerialize["sloLocationEnabled"] = o.SloLocationEnabled
	}
	if !isNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !isNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *JOSSO1ResourceDTO) UnmarshalJSON(bytes []byte) (err error) {
	varJOSSO1ResourceDTO := _JOSSO1ResourceDTO{}

	if err = json.Unmarshal(bytes, &varJOSSO1ResourceDTO); err == nil {
		*o = JOSSO1ResourceDTO(varJOSSO1ResourceDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "activation")
		delete(additionalProperties, "defaultResource")
		delete(additionalProperties, "description")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ignoredWebResources")
		delete(additionalProperties, "name")
		delete(additionalProperties, "partnerAppLocation")
		delete(additionalProperties, "serviceConnection")
		delete(additionalProperties, "sloLocation")
		delete(additionalProperties, "sloLocationEnabled")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJOSSO1ResourceDTO struct {
	value *JOSSO1ResourceDTO
	isSet bool
}

func (v NullableJOSSO1ResourceDTO) Get() *JOSSO1ResourceDTO {
	return v.value
}

func (v *NullableJOSSO1ResourceDTO) Set(val *JOSSO1ResourceDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableJOSSO1ResourceDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableJOSSO1ResourceDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJOSSO1ResourceDTO(val *JOSSO1ResourceDTO) *NullableJOSSO1ResourceDTO {
	return &NullableJOSSO1ResourceDTO{value: val, isSet: true}
}

func (v NullableJOSSO1ResourceDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJOSSO1ResourceDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


