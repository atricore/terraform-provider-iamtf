/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// FederatedChannelDTO struct for FederatedChannelDTO
type FederatedChannelDTO struct {
	ActiveBindings []string `json:"activeBindings,omitempty"`
	ActiveProfiles []string `json:"activeProfiles,omitempty"`
	ConnectionA *FederatedConnectionDTO `json:"connectionA,omitempty"`
	ConnectionB *FederatedConnectionDTO `json:"connectionB,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Location *LocationDTO `json:"location,omitempty"`
	Name *string `json:"name,omitempty"`
	OverrideProviderSetup *bool `json:"overrideProviderSetup,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FederatedChannelDTO FederatedChannelDTO

// NewFederatedChannelDTO instantiates a new FederatedChannelDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFederatedChannelDTO() *FederatedChannelDTO {
	this := FederatedChannelDTO{}
	return &this
}

// NewFederatedChannelDTOWithDefaults instantiates a new FederatedChannelDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFederatedChannelDTOWithDefaults() *FederatedChannelDTO {
	this := FederatedChannelDTO{}
	return &this
}

// GetActiveBindings returns the ActiveBindings field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetActiveBindings() []string {
	if o == nil || isNil(o.ActiveBindings) {
		var ret []string
		return ret
	}
	return o.ActiveBindings
}

// GetActiveBindingsOk returns a tuple with the ActiveBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetActiveBindingsOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveBindings) {
    return nil, false
	}
	return o.ActiveBindings, true
}

// HasActiveBindings returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasActiveBindings() bool {
	if o != nil && !isNil(o.ActiveBindings) {
		return true
	}

	return false
}

// SetActiveBindings gets a reference to the given []string and assigns it to the ActiveBindings field.
func (o *FederatedChannelDTO) SetActiveBindings(v []string) {
	o.ActiveBindings = v
}

// GetActiveProfiles returns the ActiveProfiles field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetActiveProfiles() []string {
	if o == nil || isNil(o.ActiveProfiles) {
		var ret []string
		return ret
	}
	return o.ActiveProfiles
}

// GetActiveProfilesOk returns a tuple with the ActiveProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetActiveProfilesOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveProfiles) {
    return nil, false
	}
	return o.ActiveProfiles, true
}

// HasActiveProfiles returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasActiveProfiles() bool {
	if o != nil && !isNil(o.ActiveProfiles) {
		return true
	}

	return false
}

// SetActiveProfiles gets a reference to the given []string and assigns it to the ActiveProfiles field.
func (o *FederatedChannelDTO) SetActiveProfiles(v []string) {
	o.ActiveProfiles = v
}

// GetConnectionA returns the ConnectionA field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetConnectionA() FederatedConnectionDTO {
	if o == nil || isNil(o.ConnectionA) {
		var ret FederatedConnectionDTO
		return ret
	}
	return *o.ConnectionA
}

// GetConnectionAOk returns a tuple with the ConnectionA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetConnectionAOk() (*FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.ConnectionA) {
    return nil, false
	}
	return o.ConnectionA, true
}

// HasConnectionA returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasConnectionA() bool {
	if o != nil && !isNil(o.ConnectionA) {
		return true
	}

	return false
}

// SetConnectionA gets a reference to the given FederatedConnectionDTO and assigns it to the ConnectionA field.
func (o *FederatedChannelDTO) SetConnectionA(v FederatedConnectionDTO) {
	o.ConnectionA = &v
}

// GetConnectionB returns the ConnectionB field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetConnectionB() FederatedConnectionDTO {
	if o == nil || isNil(o.ConnectionB) {
		var ret FederatedConnectionDTO
		return ret
	}
	return *o.ConnectionB
}

// GetConnectionBOk returns a tuple with the ConnectionB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetConnectionBOk() (*FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.ConnectionB) {
    return nil, false
	}
	return o.ConnectionB, true
}

// HasConnectionB returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasConnectionB() bool {
	if o != nil && !isNil(o.ConnectionB) {
		return true
	}

	return false
}

// SetConnectionB gets a reference to the given FederatedConnectionDTO and assigns it to the ConnectionB field.
func (o *FederatedChannelDTO) SetConnectionB(v FederatedConnectionDTO) {
	o.ConnectionB = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FederatedChannelDTO) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *FederatedChannelDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *FederatedChannelDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FederatedChannelDTO) SetId(v int64) {
	o.Id = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetLocation() LocationDTO {
	if o == nil || isNil(o.Location) {
		var ret LocationDTO
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationDTO and assigns it to the Location field.
func (o *FederatedChannelDTO) SetLocation(v LocationDTO) {
	o.Location = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FederatedChannelDTO) SetName(v string) {
	o.Name = &v
}

// GetOverrideProviderSetup returns the OverrideProviderSetup field value if set, zero value otherwise.
func (o *FederatedChannelDTO) GetOverrideProviderSetup() bool {
	if o == nil || isNil(o.OverrideProviderSetup) {
		var ret bool
		return ret
	}
	return *o.OverrideProviderSetup
}

// GetOverrideProviderSetupOk returns a tuple with the OverrideProviderSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederatedChannelDTO) GetOverrideProviderSetupOk() (*bool, bool) {
	if o == nil || isNil(o.OverrideProviderSetup) {
    return nil, false
	}
	return o.OverrideProviderSetup, true
}

// HasOverrideProviderSetup returns a boolean if a field has been set.
func (o *FederatedChannelDTO) HasOverrideProviderSetup() bool {
	if o != nil && !isNil(o.OverrideProviderSetup) {
		return true
	}

	return false
}

// SetOverrideProviderSetup gets a reference to the given bool and assigns it to the OverrideProviderSetup field.
func (o *FederatedChannelDTO) SetOverrideProviderSetup(v bool) {
	o.OverrideProviderSetup = &v
}

func (o FederatedChannelDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ActiveBindings) {
		toSerialize["activeBindings"] = o.ActiveBindings
	}
	if !isNil(o.ActiveProfiles) {
		toSerialize["activeProfiles"] = o.ActiveProfiles
	}
	if !isNil(o.ConnectionA) {
		toSerialize["connectionA"] = o.ConnectionA
	}
	if !isNil(o.ConnectionB) {
		toSerialize["connectionB"] = o.ConnectionB
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.OverrideProviderSetup) {
		toSerialize["overrideProviderSetup"] = o.OverrideProviderSetup
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *FederatedChannelDTO) UnmarshalJSON(bytes []byte) (err error) {
	varFederatedChannelDTO := _FederatedChannelDTO{}

	if err = json.Unmarshal(bytes, &varFederatedChannelDTO); err == nil {
		*o = FederatedChannelDTO(varFederatedChannelDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "activeBindings")
		delete(additionalProperties, "activeProfiles")
		delete(additionalProperties, "connectionA")
		delete(additionalProperties, "connectionB")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "location")
		delete(additionalProperties, "name")
		delete(additionalProperties, "overrideProviderSetup")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFederatedChannelDTO struct {
	value *FederatedChannelDTO
	isSet bool
}

func (v NullableFederatedChannelDTO) Get() *FederatedChannelDTO {
	return v.value
}

func (v *NullableFederatedChannelDTO) Set(val *FederatedChannelDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFederatedChannelDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFederatedChannelDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFederatedChannelDTO(val *FederatedChannelDTO) *NullableFederatedChannelDTO {
	return &NullableFederatedChannelDTO{value: val, isSet: true}
}

func (v NullableFederatedChannelDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFederatedChannelDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


