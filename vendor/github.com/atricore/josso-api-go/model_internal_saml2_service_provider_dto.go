/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.1-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// InternalSaml2ServiceProviderDTO struct for InternalSaml2ServiceProviderDTO
type InternalSaml2ServiceProviderDTO struct {
	AccountLinkagePolicy *AccountLinkagePolicyDTO `json:"accountLinkagePolicy,omitempty"`
	ActiveBindings []string `json:"activeBindings,omitempty"`
	ActiveProfiles []string `json:"activeProfiles,omitempty"`
	AuthenticationContract *AuthenticationContractDTO `json:"authenticationContract,omitempty"`
	AuthenticationMechanism *AuthenticationMechanismDTO `json:"authenticationMechanism,omitempty"`
	Config *ProviderConfigDTO `json:"config,omitempty"`
	DashboardUrl *string `json:"dashboardUrl,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	EnableMetadataEndpoint *bool `json:"enableMetadataEndpoint,omitempty"`
	ErrorBinding *string `json:"errorBinding,omitempty"`
	FederatedConnectionsA []FederatedConnectionDTO `json:"federatedConnectionsA,omitempty"`
	FederatedConnectionsB []FederatedConnectionDTO `json:"federatedConnectionsB,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IdentityAppliance *IdentityApplianceDefinitionDTO `json:"identityAppliance,omitempty"`
	IdentityLookups []IdentityLookupDTO `json:"identityLookups,omitempty"`
	IdentityMappingPolicy *IdentityMappingPolicyDTO `json:"identityMappingPolicy,omitempty"`
	IsRemote *bool `json:"isRemote,omitempty"`
	Location *LocationDTO `json:"location,omitempty"`
	MessageTtl *int32 `json:"messageTtl,omitempty"`
	MessageTtlTolerance *int32 `json:"messageTtlTolerance,omitempty"`
	Metadata *ResourceDTO `json:"metadata,omitempty"`
	MultivaluedAttrGroups *bool `json:"multivaluedAttrGroups,omitempty"`
	MultivaluedAttrInternal *bool `json:"multivaluedAttrInternal,omitempty"`
	MultivaluedAttrUserDefined *bool `json:"multivaluedAttrUserDefined,omitempty"`
	Name *string `json:"name,omitempty"`
	Remote *bool `json:"remote,omitempty"`
	Role *string `json:"role,omitempty"`
	ServiceConnection *ServiceConnectionDTO `json:"serviceConnection,omitempty"`
	SignAuthenticationRequests *bool `json:"signAuthenticationRequests,omitempty"`
	SignRequests *bool `json:"signRequests,omitempty"`
	SignatureHash *string `json:"signatureHash,omitempty"`
	WantAssertionSigned *bool `json:"wantAssertionSigned,omitempty"`
	WantSLOResponseSigned *bool `json:"wantSLOResponseSigned,omitempty"`
	WantSignedRequests *bool `json:"wantSignedRequests,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InternalSaml2ServiceProviderDTO InternalSaml2ServiceProviderDTO

// NewInternalSaml2ServiceProviderDTO instantiates a new InternalSaml2ServiceProviderDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalSaml2ServiceProviderDTO() *InternalSaml2ServiceProviderDTO {
	this := InternalSaml2ServiceProviderDTO{}
	return &this
}

// NewInternalSaml2ServiceProviderDTOWithDefaults instantiates a new InternalSaml2ServiceProviderDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalSaml2ServiceProviderDTOWithDefaults() *InternalSaml2ServiceProviderDTO {
	this := InternalSaml2ServiceProviderDTO{}
	return &this
}

// GetAccountLinkagePolicy returns the AccountLinkagePolicy field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetAccountLinkagePolicy() AccountLinkagePolicyDTO {
	if o == nil || isNil(o.AccountLinkagePolicy) {
		var ret AccountLinkagePolicyDTO
		return ret
	}
	return *o.AccountLinkagePolicy
}

// GetAccountLinkagePolicyOk returns a tuple with the AccountLinkagePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetAccountLinkagePolicyOk() (*AccountLinkagePolicyDTO, bool) {
	if o == nil || isNil(o.AccountLinkagePolicy) {
    return nil, false
	}
	return o.AccountLinkagePolicy, true
}

// HasAccountLinkagePolicy returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasAccountLinkagePolicy() bool {
	if o != nil && !isNil(o.AccountLinkagePolicy) {
		return true
	}

	return false
}

// SetAccountLinkagePolicy gets a reference to the given AccountLinkagePolicyDTO and assigns it to the AccountLinkagePolicy field.
func (o *InternalSaml2ServiceProviderDTO) SetAccountLinkagePolicy(v AccountLinkagePolicyDTO) {
	o.AccountLinkagePolicy = &v
}

// GetActiveBindings returns the ActiveBindings field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetActiveBindings() []string {
	if o == nil || isNil(o.ActiveBindings) {
		var ret []string
		return ret
	}
	return o.ActiveBindings
}

// GetActiveBindingsOk returns a tuple with the ActiveBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetActiveBindingsOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveBindings) {
    return nil, false
	}
	return o.ActiveBindings, true
}

// HasActiveBindings returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasActiveBindings() bool {
	if o != nil && !isNil(o.ActiveBindings) {
		return true
	}

	return false
}

// SetActiveBindings gets a reference to the given []string and assigns it to the ActiveBindings field.
func (o *InternalSaml2ServiceProviderDTO) SetActiveBindings(v []string) {
	o.ActiveBindings = v
}

// GetActiveProfiles returns the ActiveProfiles field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetActiveProfiles() []string {
	if o == nil || isNil(o.ActiveProfiles) {
		var ret []string
		return ret
	}
	return o.ActiveProfiles
}

// GetActiveProfilesOk returns a tuple with the ActiveProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetActiveProfilesOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveProfiles) {
    return nil, false
	}
	return o.ActiveProfiles, true
}

// HasActiveProfiles returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasActiveProfiles() bool {
	if o != nil && !isNil(o.ActiveProfiles) {
		return true
	}

	return false
}

// SetActiveProfiles gets a reference to the given []string and assigns it to the ActiveProfiles field.
func (o *InternalSaml2ServiceProviderDTO) SetActiveProfiles(v []string) {
	o.ActiveProfiles = v
}

// GetAuthenticationContract returns the AuthenticationContract field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetAuthenticationContract() AuthenticationContractDTO {
	if o == nil || isNil(o.AuthenticationContract) {
		var ret AuthenticationContractDTO
		return ret
	}
	return *o.AuthenticationContract
}

// GetAuthenticationContractOk returns a tuple with the AuthenticationContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetAuthenticationContractOk() (*AuthenticationContractDTO, bool) {
	if o == nil || isNil(o.AuthenticationContract) {
    return nil, false
	}
	return o.AuthenticationContract, true
}

// HasAuthenticationContract returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasAuthenticationContract() bool {
	if o != nil && !isNil(o.AuthenticationContract) {
		return true
	}

	return false
}

// SetAuthenticationContract gets a reference to the given AuthenticationContractDTO and assigns it to the AuthenticationContract field.
func (o *InternalSaml2ServiceProviderDTO) SetAuthenticationContract(v AuthenticationContractDTO) {
	o.AuthenticationContract = &v
}

// GetAuthenticationMechanism returns the AuthenticationMechanism field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetAuthenticationMechanism() AuthenticationMechanismDTO {
	if o == nil || isNil(o.AuthenticationMechanism) {
		var ret AuthenticationMechanismDTO
		return ret
	}
	return *o.AuthenticationMechanism
}

// GetAuthenticationMechanismOk returns a tuple with the AuthenticationMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetAuthenticationMechanismOk() (*AuthenticationMechanismDTO, bool) {
	if o == nil || isNil(o.AuthenticationMechanism) {
    return nil, false
	}
	return o.AuthenticationMechanism, true
}

// HasAuthenticationMechanism returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasAuthenticationMechanism() bool {
	if o != nil && !isNil(o.AuthenticationMechanism) {
		return true
	}

	return false
}

// SetAuthenticationMechanism gets a reference to the given AuthenticationMechanismDTO and assigns it to the AuthenticationMechanism field.
func (o *InternalSaml2ServiceProviderDTO) SetAuthenticationMechanism(v AuthenticationMechanismDTO) {
	o.AuthenticationMechanism = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetConfig() ProviderConfigDTO {
	if o == nil || isNil(o.Config) {
		var ret ProviderConfigDTO
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetConfigOk() (*ProviderConfigDTO, bool) {
	if o == nil || isNil(o.Config) {
    return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ProviderConfigDTO and assigns it to the Config field.
func (o *InternalSaml2ServiceProviderDTO) SetConfig(v ProviderConfigDTO) {
	o.Config = &v
}

// GetDashboardUrl returns the DashboardUrl field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetDashboardUrl() string {
	if o == nil || isNil(o.DashboardUrl) {
		var ret string
		return ret
	}
	return *o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetDashboardUrlOk() (*string, bool) {
	if o == nil || isNil(o.DashboardUrl) {
    return nil, false
	}
	return o.DashboardUrl, true
}

// HasDashboardUrl returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasDashboardUrl() bool {
	if o != nil && !isNil(o.DashboardUrl) {
		return true
	}

	return false
}

// SetDashboardUrl gets a reference to the given string and assigns it to the DashboardUrl field.
func (o *InternalSaml2ServiceProviderDTO) SetDashboardUrl(v string) {
	o.DashboardUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InternalSaml2ServiceProviderDTO) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *InternalSaml2ServiceProviderDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *InternalSaml2ServiceProviderDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetEnableMetadataEndpoint returns the EnableMetadataEndpoint field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetEnableMetadataEndpoint() bool {
	if o == nil || isNil(o.EnableMetadataEndpoint) {
		var ret bool
		return ret
	}
	return *o.EnableMetadataEndpoint
}

// GetEnableMetadataEndpointOk returns a tuple with the EnableMetadataEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetEnableMetadataEndpointOk() (*bool, bool) {
	if o == nil || isNil(o.EnableMetadataEndpoint) {
    return nil, false
	}
	return o.EnableMetadataEndpoint, true
}

// HasEnableMetadataEndpoint returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasEnableMetadataEndpoint() bool {
	if o != nil && !isNil(o.EnableMetadataEndpoint) {
		return true
	}

	return false
}

// SetEnableMetadataEndpoint gets a reference to the given bool and assigns it to the EnableMetadataEndpoint field.
func (o *InternalSaml2ServiceProviderDTO) SetEnableMetadataEndpoint(v bool) {
	o.EnableMetadataEndpoint = &v
}

// GetErrorBinding returns the ErrorBinding field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetErrorBinding() string {
	if o == nil || isNil(o.ErrorBinding) {
		var ret string
		return ret
	}
	return *o.ErrorBinding
}

// GetErrorBindingOk returns a tuple with the ErrorBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetErrorBindingOk() (*string, bool) {
	if o == nil || isNil(o.ErrorBinding) {
    return nil, false
	}
	return o.ErrorBinding, true
}

// HasErrorBinding returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasErrorBinding() bool {
	if o != nil && !isNil(o.ErrorBinding) {
		return true
	}

	return false
}

// SetErrorBinding gets a reference to the given string and assigns it to the ErrorBinding field.
func (o *InternalSaml2ServiceProviderDTO) SetErrorBinding(v string) {
	o.ErrorBinding = &v
}

// GetFederatedConnectionsA returns the FederatedConnectionsA field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetFederatedConnectionsA() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsA) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsA
}

// GetFederatedConnectionsAOk returns a tuple with the FederatedConnectionsA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetFederatedConnectionsAOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsA) {
    return nil, false
	}
	return o.FederatedConnectionsA, true
}

// HasFederatedConnectionsA returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasFederatedConnectionsA() bool {
	if o != nil && !isNil(o.FederatedConnectionsA) {
		return true
	}

	return false
}

// SetFederatedConnectionsA gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsA field.
func (o *InternalSaml2ServiceProviderDTO) SetFederatedConnectionsA(v []FederatedConnectionDTO) {
	o.FederatedConnectionsA = v
}

// GetFederatedConnectionsB returns the FederatedConnectionsB field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetFederatedConnectionsB() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsB) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsB
}

// GetFederatedConnectionsBOk returns a tuple with the FederatedConnectionsB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetFederatedConnectionsBOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsB) {
    return nil, false
	}
	return o.FederatedConnectionsB, true
}

// HasFederatedConnectionsB returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasFederatedConnectionsB() bool {
	if o != nil && !isNil(o.FederatedConnectionsB) {
		return true
	}

	return false
}

// SetFederatedConnectionsB gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsB field.
func (o *InternalSaml2ServiceProviderDTO) SetFederatedConnectionsB(v []FederatedConnectionDTO) {
	o.FederatedConnectionsB = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InternalSaml2ServiceProviderDTO) SetId(v int64) {
	o.Id = &v
}

// GetIdentityAppliance returns the IdentityAppliance field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityAppliance() IdentityApplianceDefinitionDTO {
	if o == nil || isNil(o.IdentityAppliance) {
		var ret IdentityApplianceDefinitionDTO
		return ret
	}
	return *o.IdentityAppliance
}

// GetIdentityApplianceOk returns a tuple with the IdentityAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityApplianceOk() (*IdentityApplianceDefinitionDTO, bool) {
	if o == nil || isNil(o.IdentityAppliance) {
    return nil, false
	}
	return o.IdentityAppliance, true
}

// HasIdentityAppliance returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasIdentityAppliance() bool {
	if o != nil && !isNil(o.IdentityAppliance) {
		return true
	}

	return false
}

// SetIdentityAppliance gets a reference to the given IdentityApplianceDefinitionDTO and assigns it to the IdentityAppliance field.
func (o *InternalSaml2ServiceProviderDTO) SetIdentityAppliance(v IdentityApplianceDefinitionDTO) {
	o.IdentityAppliance = &v
}

// GetIdentityLookups returns the IdentityLookups field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityLookups() []IdentityLookupDTO {
	if o == nil || isNil(o.IdentityLookups) {
		var ret []IdentityLookupDTO
		return ret
	}
	return o.IdentityLookups
}

// GetIdentityLookupsOk returns a tuple with the IdentityLookups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityLookupsOk() ([]IdentityLookupDTO, bool) {
	if o == nil || isNil(o.IdentityLookups) {
    return nil, false
	}
	return o.IdentityLookups, true
}

// HasIdentityLookups returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasIdentityLookups() bool {
	if o != nil && !isNil(o.IdentityLookups) {
		return true
	}

	return false
}

// SetIdentityLookups gets a reference to the given []IdentityLookupDTO and assigns it to the IdentityLookups field.
func (o *InternalSaml2ServiceProviderDTO) SetIdentityLookups(v []IdentityLookupDTO) {
	o.IdentityLookups = v
}

// GetIdentityMappingPolicy returns the IdentityMappingPolicy field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityMappingPolicy() IdentityMappingPolicyDTO {
	if o == nil || isNil(o.IdentityMappingPolicy) {
		var ret IdentityMappingPolicyDTO
		return ret
	}
	return *o.IdentityMappingPolicy
}

// GetIdentityMappingPolicyOk returns a tuple with the IdentityMappingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetIdentityMappingPolicyOk() (*IdentityMappingPolicyDTO, bool) {
	if o == nil || isNil(o.IdentityMappingPolicy) {
    return nil, false
	}
	return o.IdentityMappingPolicy, true
}

// HasIdentityMappingPolicy returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasIdentityMappingPolicy() bool {
	if o != nil && !isNil(o.IdentityMappingPolicy) {
		return true
	}

	return false
}

// SetIdentityMappingPolicy gets a reference to the given IdentityMappingPolicyDTO and assigns it to the IdentityMappingPolicy field.
func (o *InternalSaml2ServiceProviderDTO) SetIdentityMappingPolicy(v IdentityMappingPolicyDTO) {
	o.IdentityMappingPolicy = &v
}

// GetIsRemote returns the IsRemote field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetIsRemote() bool {
	if o == nil || isNil(o.IsRemote) {
		var ret bool
		return ret
	}
	return *o.IsRemote
}

// GetIsRemoteOk returns a tuple with the IsRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetIsRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.IsRemote) {
    return nil, false
	}
	return o.IsRemote, true
}

// HasIsRemote returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasIsRemote() bool {
	if o != nil && !isNil(o.IsRemote) {
		return true
	}

	return false
}

// SetIsRemote gets a reference to the given bool and assigns it to the IsRemote field.
func (o *InternalSaml2ServiceProviderDTO) SetIsRemote(v bool) {
	o.IsRemote = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetLocation() LocationDTO {
	if o == nil || isNil(o.Location) {
		var ret LocationDTO
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationDTO and assigns it to the Location field.
func (o *InternalSaml2ServiceProviderDTO) SetLocation(v LocationDTO) {
	o.Location = &v
}

// GetMessageTtl returns the MessageTtl field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMessageTtl() int32 {
	if o == nil || isNil(o.MessageTtl) {
		var ret int32
		return ret
	}
	return *o.MessageTtl
}

// GetMessageTtlOk returns a tuple with the MessageTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMessageTtlOk() (*int32, bool) {
	if o == nil || isNil(o.MessageTtl) {
    return nil, false
	}
	return o.MessageTtl, true
}

// HasMessageTtl returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMessageTtl() bool {
	if o != nil && !isNil(o.MessageTtl) {
		return true
	}

	return false
}

// SetMessageTtl gets a reference to the given int32 and assigns it to the MessageTtl field.
func (o *InternalSaml2ServiceProviderDTO) SetMessageTtl(v int32) {
	o.MessageTtl = &v
}

// GetMessageTtlTolerance returns the MessageTtlTolerance field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMessageTtlTolerance() int32 {
	if o == nil || isNil(o.MessageTtlTolerance) {
		var ret int32
		return ret
	}
	return *o.MessageTtlTolerance
}

// GetMessageTtlToleranceOk returns a tuple with the MessageTtlTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMessageTtlToleranceOk() (*int32, bool) {
	if o == nil || isNil(o.MessageTtlTolerance) {
    return nil, false
	}
	return o.MessageTtlTolerance, true
}

// HasMessageTtlTolerance returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMessageTtlTolerance() bool {
	if o != nil && !isNil(o.MessageTtlTolerance) {
		return true
	}

	return false
}

// SetMessageTtlTolerance gets a reference to the given int32 and assigns it to the MessageTtlTolerance field.
func (o *InternalSaml2ServiceProviderDTO) SetMessageTtlTolerance(v int32) {
	o.MessageTtlTolerance = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMetadata() ResourceDTO {
	if o == nil || isNil(o.Metadata) {
		var ret ResourceDTO
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMetadataOk() (*ResourceDTO, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ResourceDTO and assigns it to the Metadata field.
func (o *InternalSaml2ServiceProviderDTO) SetMetadata(v ResourceDTO) {
	o.Metadata = &v
}

// GetMultivaluedAttrGroups returns the MultivaluedAttrGroups field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrGroups() bool {
	if o == nil || isNil(o.MultivaluedAttrGroups) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrGroups
}

// GetMultivaluedAttrGroupsOk returns a tuple with the MultivaluedAttrGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrGroupsOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrGroups) {
    return nil, false
	}
	return o.MultivaluedAttrGroups, true
}

// HasMultivaluedAttrGroups returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMultivaluedAttrGroups() bool {
	if o != nil && !isNil(o.MultivaluedAttrGroups) {
		return true
	}

	return false
}

// SetMultivaluedAttrGroups gets a reference to the given bool and assigns it to the MultivaluedAttrGroups field.
func (o *InternalSaml2ServiceProviderDTO) SetMultivaluedAttrGroups(v bool) {
	o.MultivaluedAttrGroups = &v
}

// GetMultivaluedAttrInternal returns the MultivaluedAttrInternal field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrInternal() bool {
	if o == nil || isNil(o.MultivaluedAttrInternal) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrInternal
}

// GetMultivaluedAttrInternalOk returns a tuple with the MultivaluedAttrInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrInternalOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrInternal) {
    return nil, false
	}
	return o.MultivaluedAttrInternal, true
}

// HasMultivaluedAttrInternal returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMultivaluedAttrInternal() bool {
	if o != nil && !isNil(o.MultivaluedAttrInternal) {
		return true
	}

	return false
}

// SetMultivaluedAttrInternal gets a reference to the given bool and assigns it to the MultivaluedAttrInternal field.
func (o *InternalSaml2ServiceProviderDTO) SetMultivaluedAttrInternal(v bool) {
	o.MultivaluedAttrInternal = &v
}

// GetMultivaluedAttrUserDefined returns the MultivaluedAttrUserDefined field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrUserDefined() bool {
	if o == nil || isNil(o.MultivaluedAttrUserDefined) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrUserDefined
}

// GetMultivaluedAttrUserDefinedOk returns a tuple with the MultivaluedAttrUserDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetMultivaluedAttrUserDefinedOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrUserDefined) {
    return nil, false
	}
	return o.MultivaluedAttrUserDefined, true
}

// HasMultivaluedAttrUserDefined returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasMultivaluedAttrUserDefined() bool {
	if o != nil && !isNil(o.MultivaluedAttrUserDefined) {
		return true
	}

	return false
}

// SetMultivaluedAttrUserDefined gets a reference to the given bool and assigns it to the MultivaluedAttrUserDefined field.
func (o *InternalSaml2ServiceProviderDTO) SetMultivaluedAttrUserDefined(v bool) {
	o.MultivaluedAttrUserDefined = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InternalSaml2ServiceProviderDTO) SetName(v string) {
	o.Name = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
    return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *InternalSaml2ServiceProviderDTO) SetRemote(v bool) {
	o.Remote = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *InternalSaml2ServiceProviderDTO) SetRole(v string) {
	o.Role = &v
}

// GetServiceConnection returns the ServiceConnection field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetServiceConnection() ServiceConnectionDTO {
	if o == nil || isNil(o.ServiceConnection) {
		var ret ServiceConnectionDTO
		return ret
	}
	return *o.ServiceConnection
}

// GetServiceConnectionOk returns a tuple with the ServiceConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetServiceConnectionOk() (*ServiceConnectionDTO, bool) {
	if o == nil || isNil(o.ServiceConnection) {
    return nil, false
	}
	return o.ServiceConnection, true
}

// HasServiceConnection returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasServiceConnection() bool {
	if o != nil && !isNil(o.ServiceConnection) {
		return true
	}

	return false
}

// SetServiceConnection gets a reference to the given ServiceConnectionDTO and assigns it to the ServiceConnection field.
func (o *InternalSaml2ServiceProviderDTO) SetServiceConnection(v ServiceConnectionDTO) {
	o.ServiceConnection = &v
}

// GetSignAuthenticationRequests returns the SignAuthenticationRequests field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetSignAuthenticationRequests() bool {
	if o == nil || isNil(o.SignAuthenticationRequests) {
		var ret bool
		return ret
	}
	return *o.SignAuthenticationRequests
}

// GetSignAuthenticationRequestsOk returns a tuple with the SignAuthenticationRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetSignAuthenticationRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.SignAuthenticationRequests) {
    return nil, false
	}
	return o.SignAuthenticationRequests, true
}

// HasSignAuthenticationRequests returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasSignAuthenticationRequests() bool {
	if o != nil && !isNil(o.SignAuthenticationRequests) {
		return true
	}

	return false
}

// SetSignAuthenticationRequests gets a reference to the given bool and assigns it to the SignAuthenticationRequests field.
func (o *InternalSaml2ServiceProviderDTO) SetSignAuthenticationRequests(v bool) {
	o.SignAuthenticationRequests = &v
}

// GetSignRequests returns the SignRequests field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetSignRequests() bool {
	if o == nil || isNil(o.SignRequests) {
		var ret bool
		return ret
	}
	return *o.SignRequests
}

// GetSignRequestsOk returns a tuple with the SignRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetSignRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.SignRequests) {
    return nil, false
	}
	return o.SignRequests, true
}

// HasSignRequests returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasSignRequests() bool {
	if o != nil && !isNil(o.SignRequests) {
		return true
	}

	return false
}

// SetSignRequests gets a reference to the given bool and assigns it to the SignRequests field.
func (o *InternalSaml2ServiceProviderDTO) SetSignRequests(v bool) {
	o.SignRequests = &v
}

// GetSignatureHash returns the SignatureHash field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetSignatureHash() string {
	if o == nil || isNil(o.SignatureHash) {
		var ret string
		return ret
	}
	return *o.SignatureHash
}

// GetSignatureHashOk returns a tuple with the SignatureHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetSignatureHashOk() (*string, bool) {
	if o == nil || isNil(o.SignatureHash) {
    return nil, false
	}
	return o.SignatureHash, true
}

// HasSignatureHash returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasSignatureHash() bool {
	if o != nil && !isNil(o.SignatureHash) {
		return true
	}

	return false
}

// SetSignatureHash gets a reference to the given string and assigns it to the SignatureHash field.
func (o *InternalSaml2ServiceProviderDTO) SetSignatureHash(v string) {
	o.SignatureHash = &v
}

// GetWantAssertionSigned returns the WantAssertionSigned field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetWantAssertionSigned() bool {
	if o == nil || isNil(o.WantAssertionSigned) {
		var ret bool
		return ret
	}
	return *o.WantAssertionSigned
}

// GetWantAssertionSignedOk returns a tuple with the WantAssertionSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetWantAssertionSignedOk() (*bool, bool) {
	if o == nil || isNil(o.WantAssertionSigned) {
    return nil, false
	}
	return o.WantAssertionSigned, true
}

// HasWantAssertionSigned returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasWantAssertionSigned() bool {
	if o != nil && !isNil(o.WantAssertionSigned) {
		return true
	}

	return false
}

// SetWantAssertionSigned gets a reference to the given bool and assigns it to the WantAssertionSigned field.
func (o *InternalSaml2ServiceProviderDTO) SetWantAssertionSigned(v bool) {
	o.WantAssertionSigned = &v
}

// GetWantSLOResponseSigned returns the WantSLOResponseSigned field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetWantSLOResponseSigned() bool {
	if o == nil || isNil(o.WantSLOResponseSigned) {
		var ret bool
		return ret
	}
	return *o.WantSLOResponseSigned
}

// GetWantSLOResponseSignedOk returns a tuple with the WantSLOResponseSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetWantSLOResponseSignedOk() (*bool, bool) {
	if o == nil || isNil(o.WantSLOResponseSigned) {
    return nil, false
	}
	return o.WantSLOResponseSigned, true
}

// HasWantSLOResponseSigned returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasWantSLOResponseSigned() bool {
	if o != nil && !isNil(o.WantSLOResponseSigned) {
		return true
	}

	return false
}

// SetWantSLOResponseSigned gets a reference to the given bool and assigns it to the WantSLOResponseSigned field.
func (o *InternalSaml2ServiceProviderDTO) SetWantSLOResponseSigned(v bool) {
	o.WantSLOResponseSigned = &v
}

// GetWantSignedRequests returns the WantSignedRequests field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetWantSignedRequests() bool {
	if o == nil || isNil(o.WantSignedRequests) {
		var ret bool
		return ret
	}
	return *o.WantSignedRequests
}

// GetWantSignedRequestsOk returns a tuple with the WantSignedRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetWantSignedRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.WantSignedRequests) {
    return nil, false
	}
	return o.WantSignedRequests, true
}

// HasWantSignedRequests returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasWantSignedRequests() bool {
	if o != nil && !isNil(o.WantSignedRequests) {
		return true
	}

	return false
}

// SetWantSignedRequests gets a reference to the given bool and assigns it to the WantSignedRequests field.
func (o *InternalSaml2ServiceProviderDTO) SetWantSignedRequests(v bool) {
	o.WantSignedRequests = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetX() float64 {
	if o == nil || isNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetXOk() (*float64, bool) {
	if o == nil || isNil(o.X) {
    return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasX() bool {
	if o != nil && !isNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *InternalSaml2ServiceProviderDTO) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *InternalSaml2ServiceProviderDTO) GetY() float64 {
	if o == nil || isNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalSaml2ServiceProviderDTO) GetYOk() (*float64, bool) {
	if o == nil || isNil(o.Y) {
    return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *InternalSaml2ServiceProviderDTO) HasY() bool {
	if o != nil && !isNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *InternalSaml2ServiceProviderDTO) SetY(v float64) {
	o.Y = &v
}

func (o InternalSaml2ServiceProviderDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountLinkagePolicy) {
		toSerialize["accountLinkagePolicy"] = o.AccountLinkagePolicy
	}
	if !isNil(o.ActiveBindings) {
		toSerialize["activeBindings"] = o.ActiveBindings
	}
	if !isNil(o.ActiveProfiles) {
		toSerialize["activeProfiles"] = o.ActiveProfiles
	}
	if !isNil(o.AuthenticationContract) {
		toSerialize["authenticationContract"] = o.AuthenticationContract
	}
	if !isNil(o.AuthenticationMechanism) {
		toSerialize["authenticationMechanism"] = o.AuthenticationMechanism
	}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !isNil(o.DashboardUrl) {
		toSerialize["dashboardUrl"] = o.DashboardUrl
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.EnableMetadataEndpoint) {
		toSerialize["enableMetadataEndpoint"] = o.EnableMetadataEndpoint
	}
	if !isNil(o.ErrorBinding) {
		toSerialize["errorBinding"] = o.ErrorBinding
	}
	if !isNil(o.FederatedConnectionsA) {
		toSerialize["federatedConnectionsA"] = o.FederatedConnectionsA
	}
	if !isNil(o.FederatedConnectionsB) {
		toSerialize["federatedConnectionsB"] = o.FederatedConnectionsB
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IdentityAppliance) {
		toSerialize["identityAppliance"] = o.IdentityAppliance
	}
	if !isNil(o.IdentityLookups) {
		toSerialize["identityLookups"] = o.IdentityLookups
	}
	if !isNil(o.IdentityMappingPolicy) {
		toSerialize["identityMappingPolicy"] = o.IdentityMappingPolicy
	}
	if !isNil(o.IsRemote) {
		toSerialize["isRemote"] = o.IsRemote
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.MessageTtl) {
		toSerialize["messageTtl"] = o.MessageTtl
	}
	if !isNil(o.MessageTtlTolerance) {
		toSerialize["messageTtlTolerance"] = o.MessageTtlTolerance
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.MultivaluedAttrGroups) {
		toSerialize["multivaluedAttrGroups"] = o.MultivaluedAttrGroups
	}
	if !isNil(o.MultivaluedAttrInternal) {
		toSerialize["multivaluedAttrInternal"] = o.MultivaluedAttrInternal
	}
	if !isNil(o.MultivaluedAttrUserDefined) {
		toSerialize["multivaluedAttrUserDefined"] = o.MultivaluedAttrUserDefined
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.ServiceConnection) {
		toSerialize["serviceConnection"] = o.ServiceConnection
	}
	if !isNil(o.SignAuthenticationRequests) {
		toSerialize["signAuthenticationRequests"] = o.SignAuthenticationRequests
	}
	if !isNil(o.SignRequests) {
		toSerialize["signRequests"] = o.SignRequests
	}
	if !isNil(o.SignatureHash) {
		toSerialize["signatureHash"] = o.SignatureHash
	}
	if !isNil(o.WantAssertionSigned) {
		toSerialize["wantAssertionSigned"] = o.WantAssertionSigned
	}
	if !isNil(o.WantSLOResponseSigned) {
		toSerialize["wantSLOResponseSigned"] = o.WantSLOResponseSigned
	}
	if !isNil(o.WantSignedRequests) {
		toSerialize["wantSignedRequests"] = o.WantSignedRequests
	}
	if !isNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !isNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InternalSaml2ServiceProviderDTO) UnmarshalJSON(bytes []byte) (err error) {
	varInternalSaml2ServiceProviderDTO := _InternalSaml2ServiceProviderDTO{}

	if err = json.Unmarshal(bytes, &varInternalSaml2ServiceProviderDTO); err == nil {
		*o = InternalSaml2ServiceProviderDTO(varInternalSaml2ServiceProviderDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accountLinkagePolicy")
		delete(additionalProperties, "activeBindings")
		delete(additionalProperties, "activeProfiles")
		delete(additionalProperties, "authenticationContract")
		delete(additionalProperties, "authenticationMechanism")
		delete(additionalProperties, "config")
		delete(additionalProperties, "dashboardUrl")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "enableMetadataEndpoint")
		delete(additionalProperties, "errorBinding")
		delete(additionalProperties, "federatedConnectionsA")
		delete(additionalProperties, "federatedConnectionsB")
		delete(additionalProperties, "id")
		delete(additionalProperties, "identityAppliance")
		delete(additionalProperties, "identityLookups")
		delete(additionalProperties, "identityMappingPolicy")
		delete(additionalProperties, "isRemote")
		delete(additionalProperties, "location")
		delete(additionalProperties, "messageTtl")
		delete(additionalProperties, "messageTtlTolerance")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "multivaluedAttrGroups")
		delete(additionalProperties, "multivaluedAttrInternal")
		delete(additionalProperties, "multivaluedAttrUserDefined")
		delete(additionalProperties, "name")
		delete(additionalProperties, "remote")
		delete(additionalProperties, "role")
		delete(additionalProperties, "serviceConnection")
		delete(additionalProperties, "signAuthenticationRequests")
		delete(additionalProperties, "signRequests")
		delete(additionalProperties, "signatureHash")
		delete(additionalProperties, "wantAssertionSigned")
		delete(additionalProperties, "wantSLOResponseSigned")
		delete(additionalProperties, "wantSignedRequests")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternalSaml2ServiceProviderDTO struct {
	value *InternalSaml2ServiceProviderDTO
	isSet bool
}

func (v NullableInternalSaml2ServiceProviderDTO) Get() *InternalSaml2ServiceProviderDTO {
	return v.value
}

func (v *NullableInternalSaml2ServiceProviderDTO) Set(val *InternalSaml2ServiceProviderDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalSaml2ServiceProviderDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalSaml2ServiceProviderDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalSaml2ServiceProviderDTO(val *InternalSaml2ServiceProviderDTO) *NullableInternalSaml2ServiceProviderDTO {
	return &NullableInternalSaml2ServiceProviderDTO{value: val, isSet: true}
}

func (v NullableInternalSaml2ServiceProviderDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalSaml2ServiceProviderDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


