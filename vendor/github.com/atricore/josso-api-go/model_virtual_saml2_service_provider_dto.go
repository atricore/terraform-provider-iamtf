/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// VirtualSaml2ServiceProviderDTO struct for VirtualSaml2ServiceProviderDTO
type VirtualSaml2ServiceProviderDTO struct {
	AccountLinkagePolicy *AccountLinkagePolicyDTO `json:"accountLinkagePolicy,omitempty"`
	ActiveBindings []string `json:"activeBindings,omitempty"`
	ActiveProfiles []string `json:"activeProfiles,omitempty"`
	AttributeProfile *AttributeProfileDTO `json:"attributeProfile,omitempty"`
	Config *ProviderConfigDTO `json:"config,omitempty"`
	DashboardUrl *string `json:"dashboardUrl,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	EnableMetadataEndpoint *bool `json:"enableMetadataEndpoint,omitempty"`
	EnableProxyExtension *bool `json:"enableProxyExtension,omitempty"`
	EncryptAssertion *bool `json:"encryptAssertion,omitempty"`
	EncryptAssertionAlgorithm *string `json:"encryptAssertionAlgorithm,omitempty"`
	ErrorBinding *string `json:"errorBinding,omitempty"`
	FederatedConnectionsA []FederatedConnectionDTO `json:"federatedConnectionsA,omitempty"`
	FederatedConnectionsB []FederatedConnectionDTO `json:"federatedConnectionsB,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IdentityAppliance *IdentityApplianceDefinitionDTO `json:"identityAppliance,omitempty"`
	IdentityLookups []IdentityLookupDTO `json:"identityLookups,omitempty"`
	IdentityMappingPolicy *IdentityMappingPolicyDTO `json:"identityMappingPolicy,omitempty"`
	IdpSignatureHash *string `json:"idpSignatureHash,omitempty"`
	IgnoreRequestedNameIDPolicy *bool `json:"ignoreRequestedNameIDPolicy,omitempty"`
	IsRemote *bool `json:"isRemote,omitempty"`
	Location *LocationDTO `json:"location,omitempty"`
	MessageTtl *int32 `json:"messageTtl,omitempty"`
	MessageTtlTolerance *int32 `json:"messageTtlTolerance,omitempty"`
	Metadata *ResourceDTO `json:"metadata,omitempty"`
	MultivaluedAttrGroups *bool `json:"multivaluedAttrGroups,omitempty"`
	MultivaluedAttrInternal *bool `json:"multivaluedAttrInternal,omitempty"`
	MultivaluedAttrUserDefined *bool `json:"multivaluedAttrUserDefined,omitempty"`
	Name *string `json:"name,omitempty"`
	Oauth2Enabled *bool `json:"oauth2Enabled,omitempty"`
	Oauth2Key *string `json:"oauth2Key,omitempty"`
	Oauth2RememberMeTokenValidity *int64 `json:"oauth2RememberMeTokenValidity,omitempty"`
	Oauth2TokenValidity *int64 `json:"oauth2TokenValidity,omitempty"`
	OidcAccessTokenTimeToLive *int32 `json:"oidcAccessTokenTimeToLive,omitempty"`
	OidcAuthzCodeTimeToLive *int32 `json:"oidcAuthzCodeTimeToLive,omitempty"`
	OidcIdTokenTimeToLive *int32 `json:"oidcIdTokenTimeToLive,omitempty"`
	OidcIncludeUserClaimsInAccessToken *bool `json:"oidcIncludeUserClaimsInAccessToken,omitempty"`
	OpenIdEnabled *bool `json:"openIdEnabled,omitempty"`
	Remote *bool `json:"remote,omitempty"`
	Role *string `json:"role,omitempty"`
	SessionManagerFactory *SessionManagerFactoryDTO `json:"sessionManagerFactory,omitempty"`
	SignAuthenticationRequests *bool `json:"signAuthenticationRequests,omitempty"`
	SignRequests *bool `json:"signRequests,omitempty"`
	SpSignatureHash *string `json:"spSignatureHash,omitempty"`
	SsoSessionTimeout *int32 `json:"ssoSessionTimeout,omitempty"`
	SubjectAuthnPolicies []SubjectAuthenticationPolicyDTO `json:"subjectAuthnPolicies,omitempty"`
	SubjectNameIDPolicy *SubjectNameIdentifierPolicyDTO `json:"subjectNameIDPolicy,omitempty"`
	WantAssertionSigned *bool `json:"wantAssertionSigned,omitempty"`
	WantAuthnRequestsSigned *bool `json:"wantAuthnRequestsSigned,omitempty"`
	WantSLOResponseSigned *bool `json:"wantSLOResponseSigned,omitempty"`
	WantSignedRequests *bool `json:"wantSignedRequests,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualSaml2ServiceProviderDTO VirtualSaml2ServiceProviderDTO

// NewVirtualSaml2ServiceProviderDTO instantiates a new VirtualSaml2ServiceProviderDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualSaml2ServiceProviderDTO() *VirtualSaml2ServiceProviderDTO {
	this := VirtualSaml2ServiceProviderDTO{}
	return &this
}

// NewVirtualSaml2ServiceProviderDTOWithDefaults instantiates a new VirtualSaml2ServiceProviderDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualSaml2ServiceProviderDTOWithDefaults() *VirtualSaml2ServiceProviderDTO {
	this := VirtualSaml2ServiceProviderDTO{}
	return &this
}

// GetAccountLinkagePolicy returns the AccountLinkagePolicy field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetAccountLinkagePolicy() AccountLinkagePolicyDTO {
	if o == nil || isNil(o.AccountLinkagePolicy) {
		var ret AccountLinkagePolicyDTO
		return ret
	}
	return *o.AccountLinkagePolicy
}

// GetAccountLinkagePolicyOk returns a tuple with the AccountLinkagePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetAccountLinkagePolicyOk() (*AccountLinkagePolicyDTO, bool) {
	if o == nil || isNil(o.AccountLinkagePolicy) {
    return nil, false
	}
	return o.AccountLinkagePolicy, true
}

// HasAccountLinkagePolicy returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasAccountLinkagePolicy() bool {
	if o != nil && !isNil(o.AccountLinkagePolicy) {
		return true
	}

	return false
}

// SetAccountLinkagePolicy gets a reference to the given AccountLinkagePolicyDTO and assigns it to the AccountLinkagePolicy field.
func (o *VirtualSaml2ServiceProviderDTO) SetAccountLinkagePolicy(v AccountLinkagePolicyDTO) {
	o.AccountLinkagePolicy = &v
}

// GetActiveBindings returns the ActiveBindings field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetActiveBindings() []string {
	if o == nil || isNil(o.ActiveBindings) {
		var ret []string
		return ret
	}
	return o.ActiveBindings
}

// GetActiveBindingsOk returns a tuple with the ActiveBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetActiveBindingsOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveBindings) {
    return nil, false
	}
	return o.ActiveBindings, true
}

// HasActiveBindings returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasActiveBindings() bool {
	if o != nil && !isNil(o.ActiveBindings) {
		return true
	}

	return false
}

// SetActiveBindings gets a reference to the given []string and assigns it to the ActiveBindings field.
func (o *VirtualSaml2ServiceProviderDTO) SetActiveBindings(v []string) {
	o.ActiveBindings = v
}

// GetActiveProfiles returns the ActiveProfiles field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetActiveProfiles() []string {
	if o == nil || isNil(o.ActiveProfiles) {
		var ret []string
		return ret
	}
	return o.ActiveProfiles
}

// GetActiveProfilesOk returns a tuple with the ActiveProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetActiveProfilesOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveProfiles) {
    return nil, false
	}
	return o.ActiveProfiles, true
}

// HasActiveProfiles returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasActiveProfiles() bool {
	if o != nil && !isNil(o.ActiveProfiles) {
		return true
	}

	return false
}

// SetActiveProfiles gets a reference to the given []string and assigns it to the ActiveProfiles field.
func (o *VirtualSaml2ServiceProviderDTO) SetActiveProfiles(v []string) {
	o.ActiveProfiles = v
}

// GetAttributeProfile returns the AttributeProfile field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetAttributeProfile() AttributeProfileDTO {
	if o == nil || isNil(o.AttributeProfile) {
		var ret AttributeProfileDTO
		return ret
	}
	return *o.AttributeProfile
}

// GetAttributeProfileOk returns a tuple with the AttributeProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetAttributeProfileOk() (*AttributeProfileDTO, bool) {
	if o == nil || isNil(o.AttributeProfile) {
    return nil, false
	}
	return o.AttributeProfile, true
}

// HasAttributeProfile returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasAttributeProfile() bool {
	if o != nil && !isNil(o.AttributeProfile) {
		return true
	}

	return false
}

// SetAttributeProfile gets a reference to the given AttributeProfileDTO and assigns it to the AttributeProfile field.
func (o *VirtualSaml2ServiceProviderDTO) SetAttributeProfile(v AttributeProfileDTO) {
	o.AttributeProfile = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetConfig() ProviderConfigDTO {
	if o == nil || isNil(o.Config) {
		var ret ProviderConfigDTO
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetConfigOk() (*ProviderConfigDTO, bool) {
	if o == nil || isNil(o.Config) {
    return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ProviderConfigDTO and assigns it to the Config field.
func (o *VirtualSaml2ServiceProviderDTO) SetConfig(v ProviderConfigDTO) {
	o.Config = &v
}

// GetDashboardUrl returns the DashboardUrl field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetDashboardUrl() string {
	if o == nil || isNil(o.DashboardUrl) {
		var ret string
		return ret
	}
	return *o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetDashboardUrlOk() (*string, bool) {
	if o == nil || isNil(o.DashboardUrl) {
    return nil, false
	}
	return o.DashboardUrl, true
}

// HasDashboardUrl returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasDashboardUrl() bool {
	if o != nil && !isNil(o.DashboardUrl) {
		return true
	}

	return false
}

// SetDashboardUrl gets a reference to the given string and assigns it to the DashboardUrl field.
func (o *VirtualSaml2ServiceProviderDTO) SetDashboardUrl(v string) {
	o.DashboardUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VirtualSaml2ServiceProviderDTO) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *VirtualSaml2ServiceProviderDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *VirtualSaml2ServiceProviderDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetEnableMetadataEndpoint returns the EnableMetadataEndpoint field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetEnableMetadataEndpoint() bool {
	if o == nil || isNil(o.EnableMetadataEndpoint) {
		var ret bool
		return ret
	}
	return *o.EnableMetadataEndpoint
}

// GetEnableMetadataEndpointOk returns a tuple with the EnableMetadataEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetEnableMetadataEndpointOk() (*bool, bool) {
	if o == nil || isNil(o.EnableMetadataEndpoint) {
    return nil, false
	}
	return o.EnableMetadataEndpoint, true
}

// HasEnableMetadataEndpoint returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasEnableMetadataEndpoint() bool {
	if o != nil && !isNil(o.EnableMetadataEndpoint) {
		return true
	}

	return false
}

// SetEnableMetadataEndpoint gets a reference to the given bool and assigns it to the EnableMetadataEndpoint field.
func (o *VirtualSaml2ServiceProviderDTO) SetEnableMetadataEndpoint(v bool) {
	o.EnableMetadataEndpoint = &v
}

// GetEnableProxyExtension returns the EnableProxyExtension field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetEnableProxyExtension() bool {
	if o == nil || isNil(o.EnableProxyExtension) {
		var ret bool
		return ret
	}
	return *o.EnableProxyExtension
}

// GetEnableProxyExtensionOk returns a tuple with the EnableProxyExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetEnableProxyExtensionOk() (*bool, bool) {
	if o == nil || isNil(o.EnableProxyExtension) {
    return nil, false
	}
	return o.EnableProxyExtension, true
}

// HasEnableProxyExtension returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasEnableProxyExtension() bool {
	if o != nil && !isNil(o.EnableProxyExtension) {
		return true
	}

	return false
}

// SetEnableProxyExtension gets a reference to the given bool and assigns it to the EnableProxyExtension field.
func (o *VirtualSaml2ServiceProviderDTO) SetEnableProxyExtension(v bool) {
	o.EnableProxyExtension = &v
}

// GetEncryptAssertion returns the EncryptAssertion field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetEncryptAssertion() bool {
	if o == nil || isNil(o.EncryptAssertion) {
		var ret bool
		return ret
	}
	return *o.EncryptAssertion
}

// GetEncryptAssertionOk returns a tuple with the EncryptAssertion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetEncryptAssertionOk() (*bool, bool) {
	if o == nil || isNil(o.EncryptAssertion) {
    return nil, false
	}
	return o.EncryptAssertion, true
}

// HasEncryptAssertion returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasEncryptAssertion() bool {
	if o != nil && !isNil(o.EncryptAssertion) {
		return true
	}

	return false
}

// SetEncryptAssertion gets a reference to the given bool and assigns it to the EncryptAssertion field.
func (o *VirtualSaml2ServiceProviderDTO) SetEncryptAssertion(v bool) {
	o.EncryptAssertion = &v
}

// GetEncryptAssertionAlgorithm returns the EncryptAssertionAlgorithm field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetEncryptAssertionAlgorithm() string {
	if o == nil || isNil(o.EncryptAssertionAlgorithm) {
		var ret string
		return ret
	}
	return *o.EncryptAssertionAlgorithm
}

// GetEncryptAssertionAlgorithmOk returns a tuple with the EncryptAssertionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetEncryptAssertionAlgorithmOk() (*string, bool) {
	if o == nil || isNil(o.EncryptAssertionAlgorithm) {
    return nil, false
	}
	return o.EncryptAssertionAlgorithm, true
}

// HasEncryptAssertionAlgorithm returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasEncryptAssertionAlgorithm() bool {
	if o != nil && !isNil(o.EncryptAssertionAlgorithm) {
		return true
	}

	return false
}

// SetEncryptAssertionAlgorithm gets a reference to the given string and assigns it to the EncryptAssertionAlgorithm field.
func (o *VirtualSaml2ServiceProviderDTO) SetEncryptAssertionAlgorithm(v string) {
	o.EncryptAssertionAlgorithm = &v
}

// GetErrorBinding returns the ErrorBinding field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetErrorBinding() string {
	if o == nil || isNil(o.ErrorBinding) {
		var ret string
		return ret
	}
	return *o.ErrorBinding
}

// GetErrorBindingOk returns a tuple with the ErrorBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetErrorBindingOk() (*string, bool) {
	if o == nil || isNil(o.ErrorBinding) {
    return nil, false
	}
	return o.ErrorBinding, true
}

// HasErrorBinding returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasErrorBinding() bool {
	if o != nil && !isNil(o.ErrorBinding) {
		return true
	}

	return false
}

// SetErrorBinding gets a reference to the given string and assigns it to the ErrorBinding field.
func (o *VirtualSaml2ServiceProviderDTO) SetErrorBinding(v string) {
	o.ErrorBinding = &v
}

// GetFederatedConnectionsA returns the FederatedConnectionsA field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetFederatedConnectionsA() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsA) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsA
}

// GetFederatedConnectionsAOk returns a tuple with the FederatedConnectionsA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetFederatedConnectionsAOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsA) {
    return nil, false
	}
	return o.FederatedConnectionsA, true
}

// HasFederatedConnectionsA returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasFederatedConnectionsA() bool {
	if o != nil && !isNil(o.FederatedConnectionsA) {
		return true
	}

	return false
}

// SetFederatedConnectionsA gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsA field.
func (o *VirtualSaml2ServiceProviderDTO) SetFederatedConnectionsA(v []FederatedConnectionDTO) {
	o.FederatedConnectionsA = v
}

// GetFederatedConnectionsB returns the FederatedConnectionsB field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetFederatedConnectionsB() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsB) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsB
}

// GetFederatedConnectionsBOk returns a tuple with the FederatedConnectionsB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetFederatedConnectionsBOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsB) {
    return nil, false
	}
	return o.FederatedConnectionsB, true
}

// HasFederatedConnectionsB returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasFederatedConnectionsB() bool {
	if o != nil && !isNil(o.FederatedConnectionsB) {
		return true
	}

	return false
}

// SetFederatedConnectionsB gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsB field.
func (o *VirtualSaml2ServiceProviderDTO) SetFederatedConnectionsB(v []FederatedConnectionDTO) {
	o.FederatedConnectionsB = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VirtualSaml2ServiceProviderDTO) SetId(v int64) {
	o.Id = &v
}

// GetIdentityAppliance returns the IdentityAppliance field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityAppliance() IdentityApplianceDefinitionDTO {
	if o == nil || isNil(o.IdentityAppliance) {
		var ret IdentityApplianceDefinitionDTO
		return ret
	}
	return *o.IdentityAppliance
}

// GetIdentityApplianceOk returns a tuple with the IdentityAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityApplianceOk() (*IdentityApplianceDefinitionDTO, bool) {
	if o == nil || isNil(o.IdentityAppliance) {
    return nil, false
	}
	return o.IdentityAppliance, true
}

// HasIdentityAppliance returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIdentityAppliance() bool {
	if o != nil && !isNil(o.IdentityAppliance) {
		return true
	}

	return false
}

// SetIdentityAppliance gets a reference to the given IdentityApplianceDefinitionDTO and assigns it to the IdentityAppliance field.
func (o *VirtualSaml2ServiceProviderDTO) SetIdentityAppliance(v IdentityApplianceDefinitionDTO) {
	o.IdentityAppliance = &v
}

// GetIdentityLookups returns the IdentityLookups field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityLookups() []IdentityLookupDTO {
	if o == nil || isNil(o.IdentityLookups) {
		var ret []IdentityLookupDTO
		return ret
	}
	return o.IdentityLookups
}

// GetIdentityLookupsOk returns a tuple with the IdentityLookups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityLookupsOk() ([]IdentityLookupDTO, bool) {
	if o == nil || isNil(o.IdentityLookups) {
    return nil, false
	}
	return o.IdentityLookups, true
}

// HasIdentityLookups returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIdentityLookups() bool {
	if o != nil && !isNil(o.IdentityLookups) {
		return true
	}

	return false
}

// SetIdentityLookups gets a reference to the given []IdentityLookupDTO and assigns it to the IdentityLookups field.
func (o *VirtualSaml2ServiceProviderDTO) SetIdentityLookups(v []IdentityLookupDTO) {
	o.IdentityLookups = v
}

// GetIdentityMappingPolicy returns the IdentityMappingPolicy field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityMappingPolicy() IdentityMappingPolicyDTO {
	if o == nil || isNil(o.IdentityMappingPolicy) {
		var ret IdentityMappingPolicyDTO
		return ret
	}
	return *o.IdentityMappingPolicy
}

// GetIdentityMappingPolicyOk returns a tuple with the IdentityMappingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIdentityMappingPolicyOk() (*IdentityMappingPolicyDTO, bool) {
	if o == nil || isNil(o.IdentityMappingPolicy) {
    return nil, false
	}
	return o.IdentityMappingPolicy, true
}

// HasIdentityMappingPolicy returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIdentityMappingPolicy() bool {
	if o != nil && !isNil(o.IdentityMappingPolicy) {
		return true
	}

	return false
}

// SetIdentityMappingPolicy gets a reference to the given IdentityMappingPolicyDTO and assigns it to the IdentityMappingPolicy field.
func (o *VirtualSaml2ServiceProviderDTO) SetIdentityMappingPolicy(v IdentityMappingPolicyDTO) {
	o.IdentityMappingPolicy = &v
}

// GetIdpSignatureHash returns the IdpSignatureHash field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIdpSignatureHash() string {
	if o == nil || isNil(o.IdpSignatureHash) {
		var ret string
		return ret
	}
	return *o.IdpSignatureHash
}

// GetIdpSignatureHashOk returns a tuple with the IdpSignatureHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIdpSignatureHashOk() (*string, bool) {
	if o == nil || isNil(o.IdpSignatureHash) {
    return nil, false
	}
	return o.IdpSignatureHash, true
}

// HasIdpSignatureHash returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIdpSignatureHash() bool {
	if o != nil && !isNil(o.IdpSignatureHash) {
		return true
	}

	return false
}

// SetIdpSignatureHash gets a reference to the given string and assigns it to the IdpSignatureHash field.
func (o *VirtualSaml2ServiceProviderDTO) SetIdpSignatureHash(v string) {
	o.IdpSignatureHash = &v
}

// GetIgnoreRequestedNameIDPolicy returns the IgnoreRequestedNameIDPolicy field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIgnoreRequestedNameIDPolicy() bool {
	if o == nil || isNil(o.IgnoreRequestedNameIDPolicy) {
		var ret bool
		return ret
	}
	return *o.IgnoreRequestedNameIDPolicy
}

// GetIgnoreRequestedNameIDPolicyOk returns a tuple with the IgnoreRequestedNameIDPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIgnoreRequestedNameIDPolicyOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreRequestedNameIDPolicy) {
    return nil, false
	}
	return o.IgnoreRequestedNameIDPolicy, true
}

// HasIgnoreRequestedNameIDPolicy returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIgnoreRequestedNameIDPolicy() bool {
	if o != nil && !isNil(o.IgnoreRequestedNameIDPolicy) {
		return true
	}

	return false
}

// SetIgnoreRequestedNameIDPolicy gets a reference to the given bool and assigns it to the IgnoreRequestedNameIDPolicy field.
func (o *VirtualSaml2ServiceProviderDTO) SetIgnoreRequestedNameIDPolicy(v bool) {
	o.IgnoreRequestedNameIDPolicy = &v
}

// GetIsRemote returns the IsRemote field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetIsRemote() bool {
	if o == nil || isNil(o.IsRemote) {
		var ret bool
		return ret
	}
	return *o.IsRemote
}

// GetIsRemoteOk returns a tuple with the IsRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetIsRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.IsRemote) {
    return nil, false
	}
	return o.IsRemote, true
}

// HasIsRemote returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasIsRemote() bool {
	if o != nil && !isNil(o.IsRemote) {
		return true
	}

	return false
}

// SetIsRemote gets a reference to the given bool and assigns it to the IsRemote field.
func (o *VirtualSaml2ServiceProviderDTO) SetIsRemote(v bool) {
	o.IsRemote = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetLocation() LocationDTO {
	if o == nil || isNil(o.Location) {
		var ret LocationDTO
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationDTO and assigns it to the Location field.
func (o *VirtualSaml2ServiceProviderDTO) SetLocation(v LocationDTO) {
	o.Location = &v
}

// GetMessageTtl returns the MessageTtl field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMessageTtl() int32 {
	if o == nil || isNil(o.MessageTtl) {
		var ret int32
		return ret
	}
	return *o.MessageTtl
}

// GetMessageTtlOk returns a tuple with the MessageTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMessageTtlOk() (*int32, bool) {
	if o == nil || isNil(o.MessageTtl) {
    return nil, false
	}
	return o.MessageTtl, true
}

// HasMessageTtl returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMessageTtl() bool {
	if o != nil && !isNil(o.MessageTtl) {
		return true
	}

	return false
}

// SetMessageTtl gets a reference to the given int32 and assigns it to the MessageTtl field.
func (o *VirtualSaml2ServiceProviderDTO) SetMessageTtl(v int32) {
	o.MessageTtl = &v
}

// GetMessageTtlTolerance returns the MessageTtlTolerance field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMessageTtlTolerance() int32 {
	if o == nil || isNil(o.MessageTtlTolerance) {
		var ret int32
		return ret
	}
	return *o.MessageTtlTolerance
}

// GetMessageTtlToleranceOk returns a tuple with the MessageTtlTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMessageTtlToleranceOk() (*int32, bool) {
	if o == nil || isNil(o.MessageTtlTolerance) {
    return nil, false
	}
	return o.MessageTtlTolerance, true
}

// HasMessageTtlTolerance returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMessageTtlTolerance() bool {
	if o != nil && !isNil(o.MessageTtlTolerance) {
		return true
	}

	return false
}

// SetMessageTtlTolerance gets a reference to the given int32 and assigns it to the MessageTtlTolerance field.
func (o *VirtualSaml2ServiceProviderDTO) SetMessageTtlTolerance(v int32) {
	o.MessageTtlTolerance = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMetadata() ResourceDTO {
	if o == nil || isNil(o.Metadata) {
		var ret ResourceDTO
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMetadataOk() (*ResourceDTO, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ResourceDTO and assigns it to the Metadata field.
func (o *VirtualSaml2ServiceProviderDTO) SetMetadata(v ResourceDTO) {
	o.Metadata = &v
}

// GetMultivaluedAttrGroups returns the MultivaluedAttrGroups field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrGroups() bool {
	if o == nil || isNil(o.MultivaluedAttrGroups) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrGroups
}

// GetMultivaluedAttrGroupsOk returns a tuple with the MultivaluedAttrGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrGroupsOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrGroups) {
    return nil, false
	}
	return o.MultivaluedAttrGroups, true
}

// HasMultivaluedAttrGroups returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMultivaluedAttrGroups() bool {
	if o != nil && !isNil(o.MultivaluedAttrGroups) {
		return true
	}

	return false
}

// SetMultivaluedAttrGroups gets a reference to the given bool and assigns it to the MultivaluedAttrGroups field.
func (o *VirtualSaml2ServiceProviderDTO) SetMultivaluedAttrGroups(v bool) {
	o.MultivaluedAttrGroups = &v
}

// GetMultivaluedAttrInternal returns the MultivaluedAttrInternal field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrInternal() bool {
	if o == nil || isNil(o.MultivaluedAttrInternal) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrInternal
}

// GetMultivaluedAttrInternalOk returns a tuple with the MultivaluedAttrInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrInternalOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrInternal) {
    return nil, false
	}
	return o.MultivaluedAttrInternal, true
}

// HasMultivaluedAttrInternal returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMultivaluedAttrInternal() bool {
	if o != nil && !isNil(o.MultivaluedAttrInternal) {
		return true
	}

	return false
}

// SetMultivaluedAttrInternal gets a reference to the given bool and assigns it to the MultivaluedAttrInternal field.
func (o *VirtualSaml2ServiceProviderDTO) SetMultivaluedAttrInternal(v bool) {
	o.MultivaluedAttrInternal = &v
}

// GetMultivaluedAttrUserDefined returns the MultivaluedAttrUserDefined field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrUserDefined() bool {
	if o == nil || isNil(o.MultivaluedAttrUserDefined) {
		var ret bool
		return ret
	}
	return *o.MultivaluedAttrUserDefined
}

// GetMultivaluedAttrUserDefinedOk returns a tuple with the MultivaluedAttrUserDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetMultivaluedAttrUserDefinedOk() (*bool, bool) {
	if o == nil || isNil(o.MultivaluedAttrUserDefined) {
    return nil, false
	}
	return o.MultivaluedAttrUserDefined, true
}

// HasMultivaluedAttrUserDefined returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasMultivaluedAttrUserDefined() bool {
	if o != nil && !isNil(o.MultivaluedAttrUserDefined) {
		return true
	}

	return false
}

// SetMultivaluedAttrUserDefined gets a reference to the given bool and assigns it to the MultivaluedAttrUserDefined field.
func (o *VirtualSaml2ServiceProviderDTO) SetMultivaluedAttrUserDefined(v bool) {
	o.MultivaluedAttrUserDefined = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualSaml2ServiceProviderDTO) SetName(v string) {
	o.Name = &v
}

// GetOauth2Enabled returns the Oauth2Enabled field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2Enabled() bool {
	if o == nil || isNil(o.Oauth2Enabled) {
		var ret bool
		return ret
	}
	return *o.Oauth2Enabled
}

// GetOauth2EnabledOk returns a tuple with the Oauth2Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2EnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Oauth2Enabled) {
    return nil, false
	}
	return o.Oauth2Enabled, true
}

// HasOauth2Enabled returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOauth2Enabled() bool {
	if o != nil && !isNil(o.Oauth2Enabled) {
		return true
	}

	return false
}

// SetOauth2Enabled gets a reference to the given bool and assigns it to the Oauth2Enabled field.
func (o *VirtualSaml2ServiceProviderDTO) SetOauth2Enabled(v bool) {
	o.Oauth2Enabled = &v
}

// GetOauth2Key returns the Oauth2Key field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2Key() string {
	if o == nil || isNil(o.Oauth2Key) {
		var ret string
		return ret
	}
	return *o.Oauth2Key
}

// GetOauth2KeyOk returns a tuple with the Oauth2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2KeyOk() (*string, bool) {
	if o == nil || isNil(o.Oauth2Key) {
    return nil, false
	}
	return o.Oauth2Key, true
}

// HasOauth2Key returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOauth2Key() bool {
	if o != nil && !isNil(o.Oauth2Key) {
		return true
	}

	return false
}

// SetOauth2Key gets a reference to the given string and assigns it to the Oauth2Key field.
func (o *VirtualSaml2ServiceProviderDTO) SetOauth2Key(v string) {
	o.Oauth2Key = &v
}

// GetOauth2RememberMeTokenValidity returns the Oauth2RememberMeTokenValidity field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2RememberMeTokenValidity() int64 {
	if o == nil || isNil(o.Oauth2RememberMeTokenValidity) {
		var ret int64
		return ret
	}
	return *o.Oauth2RememberMeTokenValidity
}

// GetOauth2RememberMeTokenValidityOk returns a tuple with the Oauth2RememberMeTokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2RememberMeTokenValidityOk() (*int64, bool) {
	if o == nil || isNil(o.Oauth2RememberMeTokenValidity) {
    return nil, false
	}
	return o.Oauth2RememberMeTokenValidity, true
}

// HasOauth2RememberMeTokenValidity returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOauth2RememberMeTokenValidity() bool {
	if o != nil && !isNil(o.Oauth2RememberMeTokenValidity) {
		return true
	}

	return false
}

// SetOauth2RememberMeTokenValidity gets a reference to the given int64 and assigns it to the Oauth2RememberMeTokenValidity field.
func (o *VirtualSaml2ServiceProviderDTO) SetOauth2RememberMeTokenValidity(v int64) {
	o.Oauth2RememberMeTokenValidity = &v
}

// GetOauth2TokenValidity returns the Oauth2TokenValidity field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2TokenValidity() int64 {
	if o == nil || isNil(o.Oauth2TokenValidity) {
		var ret int64
		return ret
	}
	return *o.Oauth2TokenValidity
}

// GetOauth2TokenValidityOk returns a tuple with the Oauth2TokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOauth2TokenValidityOk() (*int64, bool) {
	if o == nil || isNil(o.Oauth2TokenValidity) {
    return nil, false
	}
	return o.Oauth2TokenValidity, true
}

// HasOauth2TokenValidity returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOauth2TokenValidity() bool {
	if o != nil && !isNil(o.Oauth2TokenValidity) {
		return true
	}

	return false
}

// SetOauth2TokenValidity gets a reference to the given int64 and assigns it to the Oauth2TokenValidity field.
func (o *VirtualSaml2ServiceProviderDTO) SetOauth2TokenValidity(v int64) {
	o.Oauth2TokenValidity = &v
}

// GetOidcAccessTokenTimeToLive returns the OidcAccessTokenTimeToLive field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcAccessTokenTimeToLive() int32 {
	if o == nil || isNil(o.OidcAccessTokenTimeToLive) {
		var ret int32
		return ret
	}
	return *o.OidcAccessTokenTimeToLive
}

// GetOidcAccessTokenTimeToLiveOk returns a tuple with the OidcAccessTokenTimeToLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcAccessTokenTimeToLiveOk() (*int32, bool) {
	if o == nil || isNil(o.OidcAccessTokenTimeToLive) {
    return nil, false
	}
	return o.OidcAccessTokenTimeToLive, true
}

// HasOidcAccessTokenTimeToLive returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOidcAccessTokenTimeToLive() bool {
	if o != nil && !isNil(o.OidcAccessTokenTimeToLive) {
		return true
	}

	return false
}

// SetOidcAccessTokenTimeToLive gets a reference to the given int32 and assigns it to the OidcAccessTokenTimeToLive field.
func (o *VirtualSaml2ServiceProviderDTO) SetOidcAccessTokenTimeToLive(v int32) {
	o.OidcAccessTokenTimeToLive = &v
}

// GetOidcAuthzCodeTimeToLive returns the OidcAuthzCodeTimeToLive field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcAuthzCodeTimeToLive() int32 {
	if o == nil || isNil(o.OidcAuthzCodeTimeToLive) {
		var ret int32
		return ret
	}
	return *o.OidcAuthzCodeTimeToLive
}

// GetOidcAuthzCodeTimeToLiveOk returns a tuple with the OidcAuthzCodeTimeToLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcAuthzCodeTimeToLiveOk() (*int32, bool) {
	if o == nil || isNil(o.OidcAuthzCodeTimeToLive) {
    return nil, false
	}
	return o.OidcAuthzCodeTimeToLive, true
}

// HasOidcAuthzCodeTimeToLive returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOidcAuthzCodeTimeToLive() bool {
	if o != nil && !isNil(o.OidcAuthzCodeTimeToLive) {
		return true
	}

	return false
}

// SetOidcAuthzCodeTimeToLive gets a reference to the given int32 and assigns it to the OidcAuthzCodeTimeToLive field.
func (o *VirtualSaml2ServiceProviderDTO) SetOidcAuthzCodeTimeToLive(v int32) {
	o.OidcAuthzCodeTimeToLive = &v
}

// GetOidcIdTokenTimeToLive returns the OidcIdTokenTimeToLive field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcIdTokenTimeToLive() int32 {
	if o == nil || isNil(o.OidcIdTokenTimeToLive) {
		var ret int32
		return ret
	}
	return *o.OidcIdTokenTimeToLive
}

// GetOidcIdTokenTimeToLiveOk returns a tuple with the OidcIdTokenTimeToLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcIdTokenTimeToLiveOk() (*int32, bool) {
	if o == nil || isNil(o.OidcIdTokenTimeToLive) {
    return nil, false
	}
	return o.OidcIdTokenTimeToLive, true
}

// HasOidcIdTokenTimeToLive returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOidcIdTokenTimeToLive() bool {
	if o != nil && !isNil(o.OidcIdTokenTimeToLive) {
		return true
	}

	return false
}

// SetOidcIdTokenTimeToLive gets a reference to the given int32 and assigns it to the OidcIdTokenTimeToLive field.
func (o *VirtualSaml2ServiceProviderDTO) SetOidcIdTokenTimeToLive(v int32) {
	o.OidcIdTokenTimeToLive = &v
}

// GetOidcIncludeUserClaimsInAccessToken returns the OidcIncludeUserClaimsInAccessToken field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcIncludeUserClaimsInAccessToken() bool {
	if o == nil || isNil(o.OidcIncludeUserClaimsInAccessToken) {
		var ret bool
		return ret
	}
	return *o.OidcIncludeUserClaimsInAccessToken
}

// GetOidcIncludeUserClaimsInAccessTokenOk returns a tuple with the OidcIncludeUserClaimsInAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOidcIncludeUserClaimsInAccessTokenOk() (*bool, bool) {
	if o == nil || isNil(o.OidcIncludeUserClaimsInAccessToken) {
    return nil, false
	}
	return o.OidcIncludeUserClaimsInAccessToken, true
}

// HasOidcIncludeUserClaimsInAccessToken returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOidcIncludeUserClaimsInAccessToken() bool {
	if o != nil && !isNil(o.OidcIncludeUserClaimsInAccessToken) {
		return true
	}

	return false
}

// SetOidcIncludeUserClaimsInAccessToken gets a reference to the given bool and assigns it to the OidcIncludeUserClaimsInAccessToken field.
func (o *VirtualSaml2ServiceProviderDTO) SetOidcIncludeUserClaimsInAccessToken(v bool) {
	o.OidcIncludeUserClaimsInAccessToken = &v
}

// GetOpenIdEnabled returns the OpenIdEnabled field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetOpenIdEnabled() bool {
	if o == nil || isNil(o.OpenIdEnabled) {
		var ret bool
		return ret
	}
	return *o.OpenIdEnabled
}

// GetOpenIdEnabledOk returns a tuple with the OpenIdEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetOpenIdEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.OpenIdEnabled) {
    return nil, false
	}
	return o.OpenIdEnabled, true
}

// HasOpenIdEnabled returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasOpenIdEnabled() bool {
	if o != nil && !isNil(o.OpenIdEnabled) {
		return true
	}

	return false
}

// SetOpenIdEnabled gets a reference to the given bool and assigns it to the OpenIdEnabled field.
func (o *VirtualSaml2ServiceProviderDTO) SetOpenIdEnabled(v bool) {
	o.OpenIdEnabled = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
    return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *VirtualSaml2ServiceProviderDTO) SetRemote(v bool) {
	o.Remote = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *VirtualSaml2ServiceProviderDTO) SetRole(v string) {
	o.Role = &v
}

// GetSessionManagerFactory returns the SessionManagerFactory field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSessionManagerFactory() SessionManagerFactoryDTO {
	if o == nil || isNil(o.SessionManagerFactory) {
		var ret SessionManagerFactoryDTO
		return ret
	}
	return *o.SessionManagerFactory
}

// GetSessionManagerFactoryOk returns a tuple with the SessionManagerFactory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSessionManagerFactoryOk() (*SessionManagerFactoryDTO, bool) {
	if o == nil || isNil(o.SessionManagerFactory) {
    return nil, false
	}
	return o.SessionManagerFactory, true
}

// HasSessionManagerFactory returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSessionManagerFactory() bool {
	if o != nil && !isNil(o.SessionManagerFactory) {
		return true
	}

	return false
}

// SetSessionManagerFactory gets a reference to the given SessionManagerFactoryDTO and assigns it to the SessionManagerFactory field.
func (o *VirtualSaml2ServiceProviderDTO) SetSessionManagerFactory(v SessionManagerFactoryDTO) {
	o.SessionManagerFactory = &v
}

// GetSignAuthenticationRequests returns the SignAuthenticationRequests field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSignAuthenticationRequests() bool {
	if o == nil || isNil(o.SignAuthenticationRequests) {
		var ret bool
		return ret
	}
	return *o.SignAuthenticationRequests
}

// GetSignAuthenticationRequestsOk returns a tuple with the SignAuthenticationRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSignAuthenticationRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.SignAuthenticationRequests) {
    return nil, false
	}
	return o.SignAuthenticationRequests, true
}

// HasSignAuthenticationRequests returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSignAuthenticationRequests() bool {
	if o != nil && !isNil(o.SignAuthenticationRequests) {
		return true
	}

	return false
}

// SetSignAuthenticationRequests gets a reference to the given bool and assigns it to the SignAuthenticationRequests field.
func (o *VirtualSaml2ServiceProviderDTO) SetSignAuthenticationRequests(v bool) {
	o.SignAuthenticationRequests = &v
}

// GetSignRequests returns the SignRequests field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSignRequests() bool {
	if o == nil || isNil(o.SignRequests) {
		var ret bool
		return ret
	}
	return *o.SignRequests
}

// GetSignRequestsOk returns a tuple with the SignRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSignRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.SignRequests) {
    return nil, false
	}
	return o.SignRequests, true
}

// HasSignRequests returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSignRequests() bool {
	if o != nil && !isNil(o.SignRequests) {
		return true
	}

	return false
}

// SetSignRequests gets a reference to the given bool and assigns it to the SignRequests field.
func (o *VirtualSaml2ServiceProviderDTO) SetSignRequests(v bool) {
	o.SignRequests = &v
}

// GetSpSignatureHash returns the SpSignatureHash field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSpSignatureHash() string {
	if o == nil || isNil(o.SpSignatureHash) {
		var ret string
		return ret
	}
	return *o.SpSignatureHash
}

// GetSpSignatureHashOk returns a tuple with the SpSignatureHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSpSignatureHashOk() (*string, bool) {
	if o == nil || isNil(o.SpSignatureHash) {
    return nil, false
	}
	return o.SpSignatureHash, true
}

// HasSpSignatureHash returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSpSignatureHash() bool {
	if o != nil && !isNil(o.SpSignatureHash) {
		return true
	}

	return false
}

// SetSpSignatureHash gets a reference to the given string and assigns it to the SpSignatureHash field.
func (o *VirtualSaml2ServiceProviderDTO) SetSpSignatureHash(v string) {
	o.SpSignatureHash = &v
}

// GetSsoSessionTimeout returns the SsoSessionTimeout field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSsoSessionTimeout() int32 {
	if o == nil || isNil(o.SsoSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.SsoSessionTimeout
}

// GetSsoSessionTimeoutOk returns a tuple with the SsoSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSsoSessionTimeoutOk() (*int32, bool) {
	if o == nil || isNil(o.SsoSessionTimeout) {
    return nil, false
	}
	return o.SsoSessionTimeout, true
}

// HasSsoSessionTimeout returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSsoSessionTimeout() bool {
	if o != nil && !isNil(o.SsoSessionTimeout) {
		return true
	}

	return false
}

// SetSsoSessionTimeout gets a reference to the given int32 and assigns it to the SsoSessionTimeout field.
func (o *VirtualSaml2ServiceProviderDTO) SetSsoSessionTimeout(v int32) {
	o.SsoSessionTimeout = &v
}

// GetSubjectAuthnPolicies returns the SubjectAuthnPolicies field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSubjectAuthnPolicies() []SubjectAuthenticationPolicyDTO {
	if o == nil || isNil(o.SubjectAuthnPolicies) {
		var ret []SubjectAuthenticationPolicyDTO
		return ret
	}
	return o.SubjectAuthnPolicies
}

// GetSubjectAuthnPoliciesOk returns a tuple with the SubjectAuthnPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSubjectAuthnPoliciesOk() ([]SubjectAuthenticationPolicyDTO, bool) {
	if o == nil || isNil(o.SubjectAuthnPolicies) {
    return nil, false
	}
	return o.SubjectAuthnPolicies, true
}

// HasSubjectAuthnPolicies returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSubjectAuthnPolicies() bool {
	if o != nil && !isNil(o.SubjectAuthnPolicies) {
		return true
	}

	return false
}

// SetSubjectAuthnPolicies gets a reference to the given []SubjectAuthenticationPolicyDTO and assigns it to the SubjectAuthnPolicies field.
func (o *VirtualSaml2ServiceProviderDTO) SetSubjectAuthnPolicies(v []SubjectAuthenticationPolicyDTO) {
	o.SubjectAuthnPolicies = v
}

// GetSubjectNameIDPolicy returns the SubjectNameIDPolicy field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetSubjectNameIDPolicy() SubjectNameIdentifierPolicyDTO {
	if o == nil || isNil(o.SubjectNameIDPolicy) {
		var ret SubjectNameIdentifierPolicyDTO
		return ret
	}
	return *o.SubjectNameIDPolicy
}

// GetSubjectNameIDPolicyOk returns a tuple with the SubjectNameIDPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetSubjectNameIDPolicyOk() (*SubjectNameIdentifierPolicyDTO, bool) {
	if o == nil || isNil(o.SubjectNameIDPolicy) {
    return nil, false
	}
	return o.SubjectNameIDPolicy, true
}

// HasSubjectNameIDPolicy returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasSubjectNameIDPolicy() bool {
	if o != nil && !isNil(o.SubjectNameIDPolicy) {
		return true
	}

	return false
}

// SetSubjectNameIDPolicy gets a reference to the given SubjectNameIdentifierPolicyDTO and assigns it to the SubjectNameIDPolicy field.
func (o *VirtualSaml2ServiceProviderDTO) SetSubjectNameIDPolicy(v SubjectNameIdentifierPolicyDTO) {
	o.SubjectNameIDPolicy = &v
}

// GetWantAssertionSigned returns the WantAssertionSigned field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetWantAssertionSigned() bool {
	if o == nil || isNil(o.WantAssertionSigned) {
		var ret bool
		return ret
	}
	return *o.WantAssertionSigned
}

// GetWantAssertionSignedOk returns a tuple with the WantAssertionSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetWantAssertionSignedOk() (*bool, bool) {
	if o == nil || isNil(o.WantAssertionSigned) {
    return nil, false
	}
	return o.WantAssertionSigned, true
}

// HasWantAssertionSigned returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasWantAssertionSigned() bool {
	if o != nil && !isNil(o.WantAssertionSigned) {
		return true
	}

	return false
}

// SetWantAssertionSigned gets a reference to the given bool and assigns it to the WantAssertionSigned field.
func (o *VirtualSaml2ServiceProviderDTO) SetWantAssertionSigned(v bool) {
	o.WantAssertionSigned = &v
}

// GetWantAuthnRequestsSigned returns the WantAuthnRequestsSigned field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetWantAuthnRequestsSigned() bool {
	if o == nil || isNil(o.WantAuthnRequestsSigned) {
		var ret bool
		return ret
	}
	return *o.WantAuthnRequestsSigned
}

// GetWantAuthnRequestsSignedOk returns a tuple with the WantAuthnRequestsSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetWantAuthnRequestsSignedOk() (*bool, bool) {
	if o == nil || isNil(o.WantAuthnRequestsSigned) {
    return nil, false
	}
	return o.WantAuthnRequestsSigned, true
}

// HasWantAuthnRequestsSigned returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasWantAuthnRequestsSigned() bool {
	if o != nil && !isNil(o.WantAuthnRequestsSigned) {
		return true
	}

	return false
}

// SetWantAuthnRequestsSigned gets a reference to the given bool and assigns it to the WantAuthnRequestsSigned field.
func (o *VirtualSaml2ServiceProviderDTO) SetWantAuthnRequestsSigned(v bool) {
	o.WantAuthnRequestsSigned = &v
}

// GetWantSLOResponseSigned returns the WantSLOResponseSigned field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetWantSLOResponseSigned() bool {
	if o == nil || isNil(o.WantSLOResponseSigned) {
		var ret bool
		return ret
	}
	return *o.WantSLOResponseSigned
}

// GetWantSLOResponseSignedOk returns a tuple with the WantSLOResponseSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetWantSLOResponseSignedOk() (*bool, bool) {
	if o == nil || isNil(o.WantSLOResponseSigned) {
    return nil, false
	}
	return o.WantSLOResponseSigned, true
}

// HasWantSLOResponseSigned returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasWantSLOResponseSigned() bool {
	if o != nil && !isNil(o.WantSLOResponseSigned) {
		return true
	}

	return false
}

// SetWantSLOResponseSigned gets a reference to the given bool and assigns it to the WantSLOResponseSigned field.
func (o *VirtualSaml2ServiceProviderDTO) SetWantSLOResponseSigned(v bool) {
	o.WantSLOResponseSigned = &v
}

// GetWantSignedRequests returns the WantSignedRequests field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetWantSignedRequests() bool {
	if o == nil || isNil(o.WantSignedRequests) {
		var ret bool
		return ret
	}
	return *o.WantSignedRequests
}

// GetWantSignedRequestsOk returns a tuple with the WantSignedRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetWantSignedRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.WantSignedRequests) {
    return nil, false
	}
	return o.WantSignedRequests, true
}

// HasWantSignedRequests returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasWantSignedRequests() bool {
	if o != nil && !isNil(o.WantSignedRequests) {
		return true
	}

	return false
}

// SetWantSignedRequests gets a reference to the given bool and assigns it to the WantSignedRequests field.
func (o *VirtualSaml2ServiceProviderDTO) SetWantSignedRequests(v bool) {
	o.WantSignedRequests = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetX() float64 {
	if o == nil || isNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetXOk() (*float64, bool) {
	if o == nil || isNil(o.X) {
    return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasX() bool {
	if o != nil && !isNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *VirtualSaml2ServiceProviderDTO) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *VirtualSaml2ServiceProviderDTO) GetY() float64 {
	if o == nil || isNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualSaml2ServiceProviderDTO) GetYOk() (*float64, bool) {
	if o == nil || isNil(o.Y) {
    return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *VirtualSaml2ServiceProviderDTO) HasY() bool {
	if o != nil && !isNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *VirtualSaml2ServiceProviderDTO) SetY(v float64) {
	o.Y = &v
}

func (o VirtualSaml2ServiceProviderDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountLinkagePolicy) {
		toSerialize["accountLinkagePolicy"] = o.AccountLinkagePolicy
	}
	if !isNil(o.ActiveBindings) {
		toSerialize["activeBindings"] = o.ActiveBindings
	}
	if !isNil(o.ActiveProfiles) {
		toSerialize["activeProfiles"] = o.ActiveProfiles
	}
	if !isNil(o.AttributeProfile) {
		toSerialize["attributeProfile"] = o.AttributeProfile
	}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !isNil(o.DashboardUrl) {
		toSerialize["dashboardUrl"] = o.DashboardUrl
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.EnableMetadataEndpoint) {
		toSerialize["enableMetadataEndpoint"] = o.EnableMetadataEndpoint
	}
	if !isNil(o.EnableProxyExtension) {
		toSerialize["enableProxyExtension"] = o.EnableProxyExtension
	}
	if !isNil(o.EncryptAssertion) {
		toSerialize["encryptAssertion"] = o.EncryptAssertion
	}
	if !isNil(o.EncryptAssertionAlgorithm) {
		toSerialize["encryptAssertionAlgorithm"] = o.EncryptAssertionAlgorithm
	}
	if !isNil(o.ErrorBinding) {
		toSerialize["errorBinding"] = o.ErrorBinding
	}
	if !isNil(o.FederatedConnectionsA) {
		toSerialize["federatedConnectionsA"] = o.FederatedConnectionsA
	}
	if !isNil(o.FederatedConnectionsB) {
		toSerialize["federatedConnectionsB"] = o.FederatedConnectionsB
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IdentityAppliance) {
		toSerialize["identityAppliance"] = o.IdentityAppliance
	}
	if !isNil(o.IdentityLookups) {
		toSerialize["identityLookups"] = o.IdentityLookups
	}
	if !isNil(o.IdentityMappingPolicy) {
		toSerialize["identityMappingPolicy"] = o.IdentityMappingPolicy
	}
	if !isNil(o.IdpSignatureHash) {
		toSerialize["idpSignatureHash"] = o.IdpSignatureHash
	}
	if !isNil(o.IgnoreRequestedNameIDPolicy) {
		toSerialize["ignoreRequestedNameIDPolicy"] = o.IgnoreRequestedNameIDPolicy
	}
	if !isNil(o.IsRemote) {
		toSerialize["isRemote"] = o.IsRemote
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.MessageTtl) {
		toSerialize["messageTtl"] = o.MessageTtl
	}
	if !isNil(o.MessageTtlTolerance) {
		toSerialize["messageTtlTolerance"] = o.MessageTtlTolerance
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.MultivaluedAttrGroups) {
		toSerialize["multivaluedAttrGroups"] = o.MultivaluedAttrGroups
	}
	if !isNil(o.MultivaluedAttrInternal) {
		toSerialize["multivaluedAttrInternal"] = o.MultivaluedAttrInternal
	}
	if !isNil(o.MultivaluedAttrUserDefined) {
		toSerialize["multivaluedAttrUserDefined"] = o.MultivaluedAttrUserDefined
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Oauth2Enabled) {
		toSerialize["oauth2Enabled"] = o.Oauth2Enabled
	}
	if !isNil(o.Oauth2Key) {
		toSerialize["oauth2Key"] = o.Oauth2Key
	}
	if !isNil(o.Oauth2RememberMeTokenValidity) {
		toSerialize["oauth2RememberMeTokenValidity"] = o.Oauth2RememberMeTokenValidity
	}
	if !isNil(o.Oauth2TokenValidity) {
		toSerialize["oauth2TokenValidity"] = o.Oauth2TokenValidity
	}
	if !isNil(o.OidcAccessTokenTimeToLive) {
		toSerialize["oidcAccessTokenTimeToLive"] = o.OidcAccessTokenTimeToLive
	}
	if !isNil(o.OidcAuthzCodeTimeToLive) {
		toSerialize["oidcAuthzCodeTimeToLive"] = o.OidcAuthzCodeTimeToLive
	}
	if !isNil(o.OidcIdTokenTimeToLive) {
		toSerialize["oidcIdTokenTimeToLive"] = o.OidcIdTokenTimeToLive
	}
	if !isNil(o.OidcIncludeUserClaimsInAccessToken) {
		toSerialize["oidcIncludeUserClaimsInAccessToken"] = o.OidcIncludeUserClaimsInAccessToken
	}
	if !isNil(o.OpenIdEnabled) {
		toSerialize["openIdEnabled"] = o.OpenIdEnabled
	}
	if !isNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.SessionManagerFactory) {
		toSerialize["sessionManagerFactory"] = o.SessionManagerFactory
	}
	if !isNil(o.SignAuthenticationRequests) {
		toSerialize["signAuthenticationRequests"] = o.SignAuthenticationRequests
	}
	if !isNil(o.SignRequests) {
		toSerialize["signRequests"] = o.SignRequests
	}
	if !isNil(o.SpSignatureHash) {
		toSerialize["spSignatureHash"] = o.SpSignatureHash
	}
	if !isNil(o.SsoSessionTimeout) {
		toSerialize["ssoSessionTimeout"] = o.SsoSessionTimeout
	}
	if !isNil(o.SubjectAuthnPolicies) {
		toSerialize["subjectAuthnPolicies"] = o.SubjectAuthnPolicies
	}
	if !isNil(o.SubjectNameIDPolicy) {
		toSerialize["subjectNameIDPolicy"] = o.SubjectNameIDPolicy
	}
	if !isNil(o.WantAssertionSigned) {
		toSerialize["wantAssertionSigned"] = o.WantAssertionSigned
	}
	if !isNil(o.WantAuthnRequestsSigned) {
		toSerialize["wantAuthnRequestsSigned"] = o.WantAuthnRequestsSigned
	}
	if !isNil(o.WantSLOResponseSigned) {
		toSerialize["wantSLOResponseSigned"] = o.WantSLOResponseSigned
	}
	if !isNil(o.WantSignedRequests) {
		toSerialize["wantSignedRequests"] = o.WantSignedRequests
	}
	if !isNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !isNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VirtualSaml2ServiceProviderDTO) UnmarshalJSON(bytes []byte) (err error) {
	varVirtualSaml2ServiceProviderDTO := _VirtualSaml2ServiceProviderDTO{}

	if err = json.Unmarshal(bytes, &varVirtualSaml2ServiceProviderDTO); err == nil {
		*o = VirtualSaml2ServiceProviderDTO(varVirtualSaml2ServiceProviderDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accountLinkagePolicy")
		delete(additionalProperties, "activeBindings")
		delete(additionalProperties, "activeProfiles")
		delete(additionalProperties, "attributeProfile")
		delete(additionalProperties, "config")
		delete(additionalProperties, "dashboardUrl")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "enableMetadataEndpoint")
		delete(additionalProperties, "enableProxyExtension")
		delete(additionalProperties, "encryptAssertion")
		delete(additionalProperties, "encryptAssertionAlgorithm")
		delete(additionalProperties, "errorBinding")
		delete(additionalProperties, "federatedConnectionsA")
		delete(additionalProperties, "federatedConnectionsB")
		delete(additionalProperties, "id")
		delete(additionalProperties, "identityAppliance")
		delete(additionalProperties, "identityLookups")
		delete(additionalProperties, "identityMappingPolicy")
		delete(additionalProperties, "idpSignatureHash")
		delete(additionalProperties, "ignoreRequestedNameIDPolicy")
		delete(additionalProperties, "isRemote")
		delete(additionalProperties, "location")
		delete(additionalProperties, "messageTtl")
		delete(additionalProperties, "messageTtlTolerance")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "multivaluedAttrGroups")
		delete(additionalProperties, "multivaluedAttrInternal")
		delete(additionalProperties, "multivaluedAttrUserDefined")
		delete(additionalProperties, "name")
		delete(additionalProperties, "oauth2Enabled")
		delete(additionalProperties, "oauth2Key")
		delete(additionalProperties, "oauth2RememberMeTokenValidity")
		delete(additionalProperties, "oauth2TokenValidity")
		delete(additionalProperties, "oidcAccessTokenTimeToLive")
		delete(additionalProperties, "oidcAuthzCodeTimeToLive")
		delete(additionalProperties, "oidcIdTokenTimeToLive")
		delete(additionalProperties, "oidcIncludeUserClaimsInAccessToken")
		delete(additionalProperties, "openIdEnabled")
		delete(additionalProperties, "remote")
		delete(additionalProperties, "role")
		delete(additionalProperties, "sessionManagerFactory")
		delete(additionalProperties, "signAuthenticationRequests")
		delete(additionalProperties, "signRequests")
		delete(additionalProperties, "spSignatureHash")
		delete(additionalProperties, "ssoSessionTimeout")
		delete(additionalProperties, "subjectAuthnPolicies")
		delete(additionalProperties, "subjectNameIDPolicy")
		delete(additionalProperties, "wantAssertionSigned")
		delete(additionalProperties, "wantAuthnRequestsSigned")
		delete(additionalProperties, "wantSLOResponseSigned")
		delete(additionalProperties, "wantSignedRequests")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualSaml2ServiceProviderDTO struct {
	value *VirtualSaml2ServiceProviderDTO
	isSet bool
}

func (v NullableVirtualSaml2ServiceProviderDTO) Get() *VirtualSaml2ServiceProviderDTO {
	return v.value
}

func (v *NullableVirtualSaml2ServiceProviderDTO) Set(val *VirtualSaml2ServiceProviderDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualSaml2ServiceProviderDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualSaml2ServiceProviderDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualSaml2ServiceProviderDTO(val *VirtualSaml2ServiceProviderDTO) *NullableVirtualSaml2ServiceProviderDTO {
	return &NullableVirtualSaml2ServiceProviderDTO{value: val, isSet: true}
}

func (v NullableVirtualSaml2ServiceProviderDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualSaml2ServiceProviderDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


