/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.1-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// GetIdPSaml2Res struct for GetIdPSaml2Res
type GetIdPSaml2Res struct {
	Error *string `json:"error,omitempty"`
	Idp *ExternalSaml2IdentityProviderDTO `json:"idp,omitempty"`
	ValidationErrors []string `json:"validationErrors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIdPSaml2Res GetIdPSaml2Res

// NewGetIdPSaml2Res instantiates a new GetIdPSaml2Res object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdPSaml2Res() *GetIdPSaml2Res {
	this := GetIdPSaml2Res{}
	return &this
}

// NewGetIdPSaml2ResWithDefaults instantiates a new GetIdPSaml2Res object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdPSaml2ResWithDefaults() *GetIdPSaml2Res {
	this := GetIdPSaml2Res{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetIdPSaml2Res) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdPSaml2Res) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetIdPSaml2Res) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *GetIdPSaml2Res) SetError(v string) {
	o.Error = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *GetIdPSaml2Res) GetIdp() ExternalSaml2IdentityProviderDTO {
	if o == nil || isNil(o.Idp) {
		var ret ExternalSaml2IdentityProviderDTO
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdPSaml2Res) GetIdpOk() (*ExternalSaml2IdentityProviderDTO, bool) {
	if o == nil || isNil(o.Idp) {
    return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *GetIdPSaml2Res) HasIdp() bool {
	if o != nil && !isNil(o.Idp) {
		return true
	}

	return false
}

// SetIdp gets a reference to the given ExternalSaml2IdentityProviderDTO and assigns it to the Idp field.
func (o *GetIdPSaml2Res) SetIdp(v ExternalSaml2IdentityProviderDTO) {
	o.Idp = &v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *GetIdPSaml2Res) GetValidationErrors() []string {
	if o == nil || isNil(o.ValidationErrors) {
		var ret []string
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdPSaml2Res) GetValidationErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.ValidationErrors) {
    return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *GetIdPSaml2Res) HasValidationErrors() bool {
	if o != nil && !isNil(o.ValidationErrors) {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []string and assigns it to the ValidationErrors field.
func (o *GetIdPSaml2Res) SetValidationErrors(v []string) {
	o.ValidationErrors = v
}

func (o GetIdPSaml2Res) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !isNil(o.Idp) {
		toSerialize["idp"] = o.Idp
	}
	if !isNil(o.ValidationErrors) {
		toSerialize["validationErrors"] = o.ValidationErrors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetIdPSaml2Res) UnmarshalJSON(bytes []byte) (err error) {
	varGetIdPSaml2Res := _GetIdPSaml2Res{}

	if err = json.Unmarshal(bytes, &varGetIdPSaml2Res); err == nil {
		*o = GetIdPSaml2Res(varGetIdPSaml2Res)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		delete(additionalProperties, "idp")
		delete(additionalProperties, "validationErrors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIdPSaml2Res struct {
	value *GetIdPSaml2Res
	isSet bool
}

func (v NullableGetIdPSaml2Res) Get() *GetIdPSaml2Res {
	return v.value
}

func (v *NullableGetIdPSaml2Res) Set(val *GetIdPSaml2Res) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdPSaml2Res) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdPSaml2Res) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdPSaml2Res(val *GetIdPSaml2Res) *NullableGetIdPSaml2Res {
	return &NullableGetIdPSaml2Res{value: val, isSet: true}
}

func (v NullableGetIdPSaml2Res) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdPSaml2Res) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


