/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.0-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// IdentityLookupDTO struct for IdentityLookupDTO
type IdentityLookupDTO struct {
	Description *string `json:"description,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IdentitySource *IdentitySourceDTO `json:"identitySource,omitempty"`
	Name *string `json:"name,omitempty"`
	Provider *ProviderDTO `json:"provider,omitempty"`
	Waypoints []PointDTO `json:"waypoints,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityLookupDTO IdentityLookupDTO

// NewIdentityLookupDTO instantiates a new IdentityLookupDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityLookupDTO() *IdentityLookupDTO {
	this := IdentityLookupDTO{}
	return &this
}

// NewIdentityLookupDTOWithDefaults instantiates a new IdentityLookupDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityLookupDTOWithDefaults() *IdentityLookupDTO {
	this := IdentityLookupDTO{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IdentityLookupDTO) SetDescription(v string) {
	o.Description = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *IdentityLookupDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IdentityLookupDTO) SetId(v int64) {
	o.Id = &v
}

// GetIdentitySource returns the IdentitySource field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetIdentitySource() IdentitySourceDTO {
	if o == nil || isNil(o.IdentitySource) {
		var ret IdentitySourceDTO
		return ret
	}
	return *o.IdentitySource
}

// GetIdentitySourceOk returns a tuple with the IdentitySource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetIdentitySourceOk() (*IdentitySourceDTO, bool) {
	if o == nil || isNil(o.IdentitySource) {
    return nil, false
	}
	return o.IdentitySource, true
}

// HasIdentitySource returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasIdentitySource() bool {
	if o != nil && !isNil(o.IdentitySource) {
		return true
	}

	return false
}

// SetIdentitySource gets a reference to the given IdentitySourceDTO and assigns it to the IdentitySource field.
func (o *IdentityLookupDTO) SetIdentitySource(v IdentitySourceDTO) {
	o.IdentitySource = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityLookupDTO) SetName(v string) {
	o.Name = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetProvider() ProviderDTO {
	if o == nil || isNil(o.Provider) {
		var ret ProviderDTO
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetProviderOk() (*ProviderDTO, bool) {
	if o == nil || isNil(o.Provider) {
    return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given ProviderDTO and assigns it to the Provider field.
func (o *IdentityLookupDTO) SetProvider(v ProviderDTO) {
	o.Provider = &v
}

// GetWaypoints returns the Waypoints field value if set, zero value otherwise.
func (o *IdentityLookupDTO) GetWaypoints() []PointDTO {
	if o == nil || isNil(o.Waypoints) {
		var ret []PointDTO
		return ret
	}
	return o.Waypoints
}

// GetWaypointsOk returns a tuple with the Waypoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupDTO) GetWaypointsOk() ([]PointDTO, bool) {
	if o == nil || isNil(o.Waypoints) {
    return nil, false
	}
	return o.Waypoints, true
}

// HasWaypoints returns a boolean if a field has been set.
func (o *IdentityLookupDTO) HasWaypoints() bool {
	if o != nil && !isNil(o.Waypoints) {
		return true
	}

	return false
}

// SetWaypoints gets a reference to the given []PointDTO and assigns it to the Waypoints field.
func (o *IdentityLookupDTO) SetWaypoints(v []PointDTO) {
	o.Waypoints = v
}

func (o IdentityLookupDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IdentitySource) {
		toSerialize["identitySource"] = o.IdentitySource
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !isNil(o.Waypoints) {
		toSerialize["waypoints"] = o.Waypoints
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IdentityLookupDTO) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityLookupDTO := _IdentityLookupDTO{}

	if err = json.Unmarshal(bytes, &varIdentityLookupDTO); err == nil {
		*o = IdentityLookupDTO(varIdentityLookupDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "identitySource")
		delete(additionalProperties, "name")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "waypoints")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityLookupDTO struct {
	value *IdentityLookupDTO
	isSet bool
}

func (v NullableIdentityLookupDTO) Get() *IdentityLookupDTO {
	return v.value
}

func (v *NullableIdentityLookupDTO) Set(val *IdentityLookupDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityLookupDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityLookupDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityLookupDTO(val *IdentityLookupDTO) *NullableIdentityLookupDTO {
	return &NullableIdentityLookupDTO{value: val, isSet: true}
}

func (v NullableIdentityLookupDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityLookupDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


