/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.5.3-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// GenericOpenIDConnectIdentityProviderDTO struct for GenericOpenIDConnectIdentityProviderDTO
type GenericOpenIDConnectIdentityProviderDTO struct {
	AccessTokenService *LocationDTO `json:"accessTokenService,omitempty"`
	ActiveBindings []string `json:"activeBindings,omitempty"`
	ActiveProfiles []string `json:"activeProfiles,omitempty"`
	AuthzTokenService *LocationDTO `json:"authzTokenService,omitempty"`
	ClientId *string `json:"clientId,omitempty"`
	ClientSecret *string `json:"clientSecret,omitempty"`
	Config *ProviderConfigDTO `json:"config,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ElementId *string `json:"elementId,omitempty"`
	FederatedConnectionsA []FederatedConnectionDTO `json:"federatedConnectionsA,omitempty"`
	FederatedConnectionsB []FederatedConnectionDTO `json:"federatedConnectionsB,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IdentityAppliance *IdentityApplianceDefinitionDTO `json:"identityAppliance,omitempty"`
	IdentityLookups []IdentityLookupDTO `json:"identityLookups,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	LoadMetadata *bool `json:"loadMetadata,omitempty"`
	IsRemote *bool `json:"isRemote,omitempty"`
	Location *LocationDTO `json:"location,omitempty"`
	Metadata *ResourceDTO `json:"metadata,omitempty"`
	MobileAuthzTokenService *LocationDTO `json:"mobileAuthzTokenService,omitempty"`
	Name *string `json:"name,omitempty"`
	Remote *bool `json:"remote,omitempty"`
	Role *string `json:"role,omitempty"`
	Scopes *string `json:"scopes,omitempty"`
	ServerKey *string `json:"serverKey,omitempty"`
	UserFields *string `json:"userFields,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GenericOpenIDConnectIdentityProviderDTO GenericOpenIDConnectIdentityProviderDTO

// NewGenericOpenIDConnectIdentityProviderDTO instantiates a new GenericOpenIDConnectIdentityProviderDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericOpenIDConnectIdentityProviderDTO() *GenericOpenIDConnectIdentityProviderDTO {
	this := GenericOpenIDConnectIdentityProviderDTO{}
	return &this
}

// NewGenericOpenIDConnectIdentityProviderDTOWithDefaults instantiates a new GenericOpenIDConnectIdentityProviderDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericOpenIDConnectIdentityProviderDTOWithDefaults() *GenericOpenIDConnectIdentityProviderDTO {
	this := GenericOpenIDConnectIdentityProviderDTO{}
	return &this
}

// GetAccessTokenService returns the AccessTokenService field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetAccessTokenService() LocationDTO {
	if o == nil || isNil(o.AccessTokenService) {
		var ret LocationDTO
		return ret
	}
	return *o.AccessTokenService
}

// GetAccessTokenServiceOk returns a tuple with the AccessTokenService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetAccessTokenServiceOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.AccessTokenService) {
    return nil, false
	}
	return o.AccessTokenService, true
}

// HasAccessTokenService returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasAccessTokenService() bool {
	if o != nil && !isNil(o.AccessTokenService) {
		return true
	}

	return false
}

// SetAccessTokenService gets a reference to the given LocationDTO and assigns it to the AccessTokenService field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetAccessTokenService(v LocationDTO) {
	o.AccessTokenService = &v
}

// GetActiveBindings returns the ActiveBindings field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetActiveBindings() []string {
	if o == nil || isNil(o.ActiveBindings) {
		var ret []string
		return ret
	}
	return o.ActiveBindings
}

// GetActiveBindingsOk returns a tuple with the ActiveBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetActiveBindingsOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveBindings) {
    return nil, false
	}
	return o.ActiveBindings, true
}

// HasActiveBindings returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasActiveBindings() bool {
	if o != nil && !isNil(o.ActiveBindings) {
		return true
	}

	return false
}

// SetActiveBindings gets a reference to the given []string and assigns it to the ActiveBindings field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetActiveBindings(v []string) {
	o.ActiveBindings = v
}

// GetActiveProfiles returns the ActiveProfiles field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetActiveProfiles() []string {
	if o == nil || isNil(o.ActiveProfiles) {
		var ret []string
		return ret
	}
	return o.ActiveProfiles
}

// GetActiveProfilesOk returns a tuple with the ActiveProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetActiveProfilesOk() ([]string, bool) {
	if o == nil || isNil(o.ActiveProfiles) {
    return nil, false
	}
	return o.ActiveProfiles, true
}

// HasActiveProfiles returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasActiveProfiles() bool {
	if o != nil && !isNil(o.ActiveProfiles) {
		return true
	}

	return false
}

// SetActiveProfiles gets a reference to the given []string and assigns it to the ActiveProfiles field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetActiveProfiles(v []string) {
	o.ActiveProfiles = v
}

// GetAuthzTokenService returns the AuthzTokenService field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetAuthzTokenService() LocationDTO {
	if o == nil || isNil(o.AuthzTokenService) {
		var ret LocationDTO
		return ret
	}
	return *o.AuthzTokenService
}

// GetAuthzTokenServiceOk returns a tuple with the AuthzTokenService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetAuthzTokenServiceOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.AuthzTokenService) {
    return nil, false
	}
	return o.AuthzTokenService, true
}

// HasAuthzTokenService returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasAuthzTokenService() bool {
	if o != nil && !isNil(o.AuthzTokenService) {
		return true
	}

	return false
}

// SetAuthzTokenService gets a reference to the given LocationDTO and assigns it to the AuthzTokenService field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetAuthzTokenService(v LocationDTO) {
	o.AuthzTokenService = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
    return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetClientSecret() string {
	if o == nil || isNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetClientSecretOk() (*string, bool) {
	if o == nil || isNil(o.ClientSecret) {
    return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasClientSecret() bool {
	if o != nil && !isNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetConfig() ProviderConfigDTO {
	if o == nil || isNil(o.Config) {
		var ret ProviderConfigDTO
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetConfigOk() (*ProviderConfigDTO, bool) {
	if o == nil || isNil(o.Config) {
    return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ProviderConfigDTO and assigns it to the Config field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetConfig(v ProviderConfigDTO) {
	o.Config = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetElementId() string {
	if o == nil || isNil(o.ElementId) {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetElementIdOk() (*string, bool) {
	if o == nil || isNil(o.ElementId) {
    return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasElementId() bool {
	if o != nil && !isNil(o.ElementId) {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetElementId(v string) {
	o.ElementId = &v
}

// GetFederatedConnectionsA returns the FederatedConnectionsA field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetFederatedConnectionsA() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsA) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsA
}

// GetFederatedConnectionsAOk returns a tuple with the FederatedConnectionsA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetFederatedConnectionsAOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsA) {
    return nil, false
	}
	return o.FederatedConnectionsA, true
}

// HasFederatedConnectionsA returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasFederatedConnectionsA() bool {
	if o != nil && !isNil(o.FederatedConnectionsA) {
		return true
	}

	return false
}

// SetFederatedConnectionsA gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsA field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetFederatedConnectionsA(v []FederatedConnectionDTO) {
	o.FederatedConnectionsA = v
}

// GetFederatedConnectionsB returns the FederatedConnectionsB field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetFederatedConnectionsB() []FederatedConnectionDTO {
	if o == nil || isNil(o.FederatedConnectionsB) {
		var ret []FederatedConnectionDTO
		return ret
	}
	return o.FederatedConnectionsB
}

// GetFederatedConnectionsBOk returns a tuple with the FederatedConnectionsB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetFederatedConnectionsBOk() ([]FederatedConnectionDTO, bool) {
	if o == nil || isNil(o.FederatedConnectionsB) {
    return nil, false
	}
	return o.FederatedConnectionsB, true
}

// HasFederatedConnectionsB returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasFederatedConnectionsB() bool {
	if o != nil && !isNil(o.FederatedConnectionsB) {
		return true
	}

	return false
}

// SetFederatedConnectionsB gets a reference to the given []FederatedConnectionDTO and assigns it to the FederatedConnectionsB field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetFederatedConnectionsB(v []FederatedConnectionDTO) {
	o.FederatedConnectionsB = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetId(v int64) {
	o.Id = &v
}

// GetIdentityAppliance returns the IdentityAppliance field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIdentityAppliance() IdentityApplianceDefinitionDTO {
	if o == nil || isNil(o.IdentityAppliance) {
		var ret IdentityApplianceDefinitionDTO
		return ret
	}
	return *o.IdentityAppliance
}

// GetIdentityApplianceOk returns a tuple with the IdentityAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIdentityApplianceOk() (*IdentityApplianceDefinitionDTO, bool) {
	if o == nil || isNil(o.IdentityAppliance) {
    return nil, false
	}
	return o.IdentityAppliance, true
}

// HasIdentityAppliance returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasIdentityAppliance() bool {
	if o != nil && !isNil(o.IdentityAppliance) {
		return true
	}

	return false
}

// SetIdentityAppliance gets a reference to the given IdentityApplianceDefinitionDTO and assigns it to the IdentityAppliance field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetIdentityAppliance(v IdentityApplianceDefinitionDTO) {
	o.IdentityAppliance = &v
}

// GetIdentityLookups returns the IdentityLookups field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIdentityLookups() []IdentityLookupDTO {
	if o == nil || isNil(o.IdentityLookups) {
		var ret []IdentityLookupDTO
		return ret
	}
	return o.IdentityLookups
}

// GetIdentityLookupsOk returns a tuple with the IdentityLookups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIdentityLookupsOk() ([]IdentityLookupDTO, bool) {
	if o == nil || isNil(o.IdentityLookups) {
    return nil, false
	}
	return o.IdentityLookups, true
}

// HasIdentityLookups returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasIdentityLookups() bool {
	if o != nil && !isNil(o.IdentityLookups) {
		return true
	}

	return false
}

// SetIdentityLookups gets a reference to the given []IdentityLookupDTO and assigns it to the IdentityLookups field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetIdentityLookups(v []IdentityLookupDTO) {
	o.IdentityLookups = v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIssuer() string {
	if o == nil || isNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIssuerOk() (*string, bool) {
	if o == nil || isNil(o.Issuer) {
    return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasIssuer() bool {
	if o != nil && !isNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetIssuer(v string) {
	o.Issuer = &v
}

// GetLoadMetadata returns the LoadMetadata field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetLoadMetadata() bool {
	if o == nil || isNil(o.LoadMetadata) {
		var ret bool
		return ret
	}
	return *o.LoadMetadata
}

// GetLoadMetadataOk returns a tuple with the LoadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetLoadMetadataOk() (*bool, bool) {
	if o == nil || isNil(o.LoadMetadata) {
    return nil, false
	}
	return o.LoadMetadata, true
}

// HasLoadMetadata returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasLoadMetadata() bool {
	if o != nil && !isNil(o.LoadMetadata) {
		return true
	}

	return false
}

// SetLoadMetadata gets a reference to the given bool and assigns it to the LoadMetadata field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetLoadMetadata(v bool) {
	o.LoadMetadata = &v
}

// GetIsRemote returns the IsRemote field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIsRemote() bool {
	if o == nil || isNil(o.IsRemote) {
		var ret bool
		return ret
	}
	return *o.IsRemote
}

// GetIsRemoteOk returns a tuple with the IsRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetIsRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.IsRemote) {
    return nil, false
	}
	return o.IsRemote, true
}

// HasIsRemote returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasIsRemote() bool {
	if o != nil && !isNil(o.IsRemote) {
		return true
	}

	return false
}

// SetIsRemote gets a reference to the given bool and assigns it to the IsRemote field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetIsRemote(v bool) {
	o.IsRemote = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetLocation() LocationDTO {
	if o == nil || isNil(o.Location) {
		var ret LocationDTO
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetLocationOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationDTO and assigns it to the Location field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetLocation(v LocationDTO) {
	o.Location = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetMetadata() ResourceDTO {
	if o == nil || isNil(o.Metadata) {
		var ret ResourceDTO
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetMetadataOk() (*ResourceDTO, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ResourceDTO and assigns it to the Metadata field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetMetadata(v ResourceDTO) {
	o.Metadata = &v
}

// GetMobileAuthzTokenService returns the MobileAuthzTokenService field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetMobileAuthzTokenService() LocationDTO {
	if o == nil || isNil(o.MobileAuthzTokenService) {
		var ret LocationDTO
		return ret
	}
	return *o.MobileAuthzTokenService
}

// GetMobileAuthzTokenServiceOk returns a tuple with the MobileAuthzTokenService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetMobileAuthzTokenServiceOk() (*LocationDTO, bool) {
	if o == nil || isNil(o.MobileAuthzTokenService) {
    return nil, false
	}
	return o.MobileAuthzTokenService, true
}

// HasMobileAuthzTokenService returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasMobileAuthzTokenService() bool {
	if o != nil && !isNil(o.MobileAuthzTokenService) {
		return true
	}

	return false
}

// SetMobileAuthzTokenService gets a reference to the given LocationDTO and assigns it to the MobileAuthzTokenService field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetMobileAuthzTokenService(v LocationDTO) {
	o.MobileAuthzTokenService = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetName(v string) {
	o.Name = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
    return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetRemote(v bool) {
	o.Remote = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetRole(v string) {
	o.Role = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetScopes() string {
	if o == nil || isNil(o.Scopes) {
		var ret string
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetScopesOk() (*string, bool) {
	if o == nil || isNil(o.Scopes) {
    return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasScopes() bool {
	if o != nil && !isNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetScopes(v string) {
	o.Scopes = &v
}

// GetServerKey returns the ServerKey field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetServerKey() string {
	if o == nil || isNil(o.ServerKey) {
		var ret string
		return ret
	}
	return *o.ServerKey
}

// GetServerKeyOk returns a tuple with the ServerKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetServerKeyOk() (*string, bool) {
	if o == nil || isNil(o.ServerKey) {
    return nil, false
	}
	return o.ServerKey, true
}

// HasServerKey returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasServerKey() bool {
	if o != nil && !isNil(o.ServerKey) {
		return true
	}

	return false
}

// SetServerKey gets a reference to the given string and assigns it to the ServerKey field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetServerKey(v string) {
	o.ServerKey = &v
}

// GetUserFields returns the UserFields field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetUserFields() string {
	if o == nil || isNil(o.UserFields) {
		var ret string
		return ret
	}
	return *o.UserFields
}

// GetUserFieldsOk returns a tuple with the UserFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetUserFieldsOk() (*string, bool) {
	if o == nil || isNil(o.UserFields) {
    return nil, false
	}
	return o.UserFields, true
}

// HasUserFields returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasUserFields() bool {
	if o != nil && !isNil(o.UserFields) {
		return true
	}

	return false
}

// SetUserFields gets a reference to the given string and assigns it to the UserFields field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetUserFields(v string) {
	o.UserFields = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetX() float64 {
	if o == nil || isNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetXOk() (*float64, bool) {
	if o == nil || isNil(o.X) {
    return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasX() bool {
	if o != nil && !isNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetY() float64 {
	if o == nil || isNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) GetYOk() (*float64, bool) {
	if o == nil || isNil(o.Y) {
    return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *GenericOpenIDConnectIdentityProviderDTO) HasY() bool {
	if o != nil && !isNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *GenericOpenIDConnectIdentityProviderDTO) SetY(v float64) {
	o.Y = &v
}

func (o GenericOpenIDConnectIdentityProviderDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessTokenService) {
		toSerialize["accessTokenService"] = o.AccessTokenService
	}
	if !isNil(o.ActiveBindings) {
		toSerialize["activeBindings"] = o.ActiveBindings
	}
	if !isNil(o.ActiveProfiles) {
		toSerialize["activeProfiles"] = o.ActiveProfiles
	}
	if !isNil(o.AuthzTokenService) {
		toSerialize["authzTokenService"] = o.AuthzTokenService
	}
	if !isNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !isNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.ElementId) {
		toSerialize["elementId"] = o.ElementId
	}
	if !isNil(o.FederatedConnectionsA) {
		toSerialize["federatedConnectionsA"] = o.FederatedConnectionsA
	}
	if !isNil(o.FederatedConnectionsB) {
		toSerialize["federatedConnectionsB"] = o.FederatedConnectionsB
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IdentityAppliance) {
		toSerialize["identityAppliance"] = o.IdentityAppliance
	}
	if !isNil(o.IdentityLookups) {
		toSerialize["identityLookups"] = o.IdentityLookups
	}
	if !isNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !isNil(o.LoadMetadata) {
		toSerialize["loadMetadata"] = o.LoadMetadata
	}
	if !isNil(o.IsRemote) {
		toSerialize["isRemote"] = o.IsRemote
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.MobileAuthzTokenService) {
		toSerialize["mobileAuthzTokenService"] = o.MobileAuthzTokenService
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !isNil(o.ServerKey) {
		toSerialize["serverKey"] = o.ServerKey
	}
	if !isNil(o.UserFields) {
		toSerialize["userFields"] = o.UserFields
	}
	if !isNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !isNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GenericOpenIDConnectIdentityProviderDTO) UnmarshalJSON(bytes []byte) (err error) {
	varGenericOpenIDConnectIdentityProviderDTO := _GenericOpenIDConnectIdentityProviderDTO{}

	if err = json.Unmarshal(bytes, &varGenericOpenIDConnectIdentityProviderDTO); err == nil {
		*o = GenericOpenIDConnectIdentityProviderDTO(varGenericOpenIDConnectIdentityProviderDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessTokenService")
		delete(additionalProperties, "activeBindings")
		delete(additionalProperties, "activeProfiles")
		delete(additionalProperties, "authzTokenService")
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "clientSecret")
		delete(additionalProperties, "config")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "elementId")
		delete(additionalProperties, "federatedConnectionsA")
		delete(additionalProperties, "federatedConnectionsB")
		delete(additionalProperties, "id")
		delete(additionalProperties, "identityAppliance")
		delete(additionalProperties, "identityLookups")
		delete(additionalProperties, "issuer")
		delete(additionalProperties, "loadMetadata")
		delete(additionalProperties, "isRemote")
		delete(additionalProperties, "location")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "mobileAuthzTokenService")
		delete(additionalProperties, "name")
		delete(additionalProperties, "remote")
		delete(additionalProperties, "role")
		delete(additionalProperties, "scopes")
		delete(additionalProperties, "serverKey")
		delete(additionalProperties, "userFields")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGenericOpenIDConnectIdentityProviderDTO struct {
	value *GenericOpenIDConnectIdentityProviderDTO
	isSet bool
}

func (v NullableGenericOpenIDConnectIdentityProviderDTO) Get() *GenericOpenIDConnectIdentityProviderDTO {
	return v.value
}

func (v *NullableGenericOpenIDConnectIdentityProviderDTO) Set(val *GenericOpenIDConnectIdentityProviderDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericOpenIDConnectIdentityProviderDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericOpenIDConnectIdentityProviderDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericOpenIDConnectIdentityProviderDTO(val *GenericOpenIDConnectIdentityProviderDTO) *NullableGenericOpenIDConnectIdentityProviderDTO {
	return &NullableGenericOpenIDConnectIdentityProviderDTO{value: val, isSet: true}
}

func (v NullableGenericOpenIDConnectIdentityProviderDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericOpenIDConnectIdentityProviderDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


